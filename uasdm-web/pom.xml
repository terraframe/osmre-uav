<!--

    Copyright 2020 The Department of Interior

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>gov.osmre.uasdm</groupId>
    <artifactId>uasdm</artifactId>
    <version>1.0.4-SNAPSHOT</version>
  </parent>
  <artifactId>uasdm-web</artifactId>
  <packaging>war</packaging>

  <name>UASDM Web</name>

  <properties>
    <geoserver.version>2.14.2-custom</geoserver.version>
    <local.host>$${pageContext.request.contextPath}</local.host>
  </properties>

  <dependencies>
    <dependency>
      <groupId>gov.osmre.uasdm</groupId>
      <artifactId>uasdm-server</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.jawr</groupId>
      <artifactId>jawr-core</artifactId>
      <version>3.7</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.asual.lesscss</groupId>
      <artifactId>lesscss-engine</artifactId>
      <version>1.3.3</version>
      <exclusions>
        <exclusion>
          <artifactId>rhino</artifactId>
          <groupId>org.mozilla</groupId>
        </exclusion>
      </exclusions>
    </dependency>
<!--
    <dependency>
      <groupId>org.geoserver</groupId>
      <artifactId>geoserver</artifactId>
      <version>${geoserver.version}</version>
      <type>war</type>
      <scope>provided</scope>
    </dependency>
-->    
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.1</version>
      <scope>provided</scope> <!-- This dependency is NOT transitive because scope=provided -->
    </dependency>
    <!-- https://mvnrepository.com/artifact/javax.servlet/jstl -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>

  </dependencies>

  <profiles>
    <profile>
      <id>ng2-dev</id>
      <properties>
        <local.host>https://localhost:8080</local.host>
      </properties>
    </profile>
    <profile>
      <id>cargo-run-uasdm</id>
      <activation>
        <property>
          <name>cargo-run-uasdm</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>1.7.11</version>
            <configuration>
              <container>
                <containerId>tomcat8x</containerId>
                <artifactInstaller>
                  <groupId>org.apache.tomcat</groupId>
                  <artifactId>tomcat</artifactId>
                  <version>8.5.53</version>
                </artifactInstaller>
                <timeout>4800000</timeout>
              </container>
              <configuration>
                <properties>
                  <cargo.servlet.port>8443</cargo.servlet.port>
                  <cargo.rmi.port>10099</cargo.rmi.port>
                  <cargo.protocol>https</cargo.protocol>
                  <cargo.tomcat.connector.clientAuth>false</cargo.tomcat.connector.clientAuth>
                  <cargo.tomcat.connector.sslProtocol>TLS</cargo.tomcat.connector.sslProtocol>
                  <cargo.tomcat.connector.keystoreFile>/${project.basedir}/src/test/resources/keystore.ks</cargo.tomcat.connector.keystoreFile>
                  <cargo.tomcat.connector.keystorePass>2v8hVW2rPFncN6m</cargo.tomcat.connector.keystorePass>
                  <cargo.tomcat.connector.keyAlias>tomcat</cargo.tomcat.connector.keyAlias>
                  <cargo.tomcat.httpSecure>true</cargo.tomcat.httpSecure>
                  <cargo.jvmargs>
                    -Xmx2000M
                    -Xdebug
                    -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000
                    -Dtomcat.home=/${project.basedir}/target/cargo/configurations/tomcat8x
                    -Djavax.net.ssl.keyStore=/${project.basedir}/src/test/resources/keystore.ks
                    -Djavax.net.ssl.keyStorePassword=2v8hVW2rPFncN6m
                    -Djavax.net.ssl.trustStore=/${project.basedir}/src/test/resources/tomcat.truststore
                    -Djavax.net.ssl.trustStorePassword=2v8hVW2rPFncN6m
                    -Djava.rmi.server.hostname=127.0.0.1
                    -Dbirt-server=true
                    -Denvcfg=${project.basedir}/../envcfg
                    -Dproject.basedir=${project.basedir}
                    -Dcom.sun.jndi.ldap.object.disableEndpointIdentification=true
                    -Dnetwork.binary.maxLength=56384                    
                  </cargo.jvmargs>
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>gov.osmre.uasdm</groupId>
                  <artifactId>uasdm-web</artifactId>
                  <type>war</type>
                  <properties>
                    <context>uasdm</context>
                  </properties>
                </deployable>
<!--
                <deployable>
                  <groupId>org.geoserver</groupId>
                  <artifactId>geoserver</artifactId>
                  <type>war</type>
                  <properties>
                    <context>geoserver</context>
                  </properties>
                </deployable>
-->                
              </deployables>
            </configuration>
            <executions>
              <execution>
                <id>cargo-run</id>
                <phase>verify</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <!-- Just for convenience, this stops us from having to add the version 
      when we hit our webapp. -->
    <finalName>uasdm</finalName>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>**/*.xlsx</exclude>
          <exclude>**/*.zip</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.xlsx</include>
          <include>**/*.zip</include>
        </includes>
      </resource>
    </resources>

    <plugins>
      <!-- Copy over the compiled angular code   -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <!-- here the phase you need -->
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/uasdm</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/../uasdm-ui/dist</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>      
      <!-- Weave Aspects -->
      <plugin>
        <groupId>dev.aspectj</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>${aspectj.plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
            <version>${aspectj.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <aspectLibraries>
            <aspectLibrary>
              <groupId>com.runwaysdk</groupId>
              <artifactId>runwaysdk-server</artifactId>
            </aspectLibrary>
          </aspectLibraries>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <complianceLevel>${maven.compiler.target}</complianceLevel>
          <fork>true</fork>
          <meminitial>512m</meminitial>
          <maxmem>1024m</maxmem>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.3.2</version>
        <configuration>
          <warSourceExcludes>**/prism.jsp,**/admin.jsp,**/index.jsp</warSourceExcludes>
          <packagingExcludes>
            <!-- Exclude all jars provided by tomcat -->
            **/catalina*.jar,
            **/servlet-api*.jar,
            **/annotations-api*.jar,
            <!-- Exclude aspectjtools because it conflicts with our BIRT jar -->
            **/aspectjtools*.jar
          </packagingExcludes>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
