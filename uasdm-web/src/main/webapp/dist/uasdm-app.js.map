{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app/shared/model/modal.ts","webpack:///./src/app/shared/service/guard.service.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/shared/component/localize/localize.component.ts","webpack:///./src/app/shared/component/localize/localize.component.html","webpack:///./src/app/shared/service/http-backend-client.service.ts","webpack:///./src/app/shared/service/date.service.ts","webpack:///./src/app/shared/service/auth.service.ts","webpack:///./src/app/uasdm-app.component.ts","webpack:///./src/app/uasdm-app.component.html","webpack:///./src/app/core/component/login/login-header.component.ts","webpack:///./src/app/core/component/login/login-header.component.html","webpack:///./src/app/core/component/login/login.component.html","webpack:///./src/app/core/component/login/login.component.ts","webpack:///./src/app/core/service/forgotpassword.service.ts","webpack:///./src/app/core/component/forgotpassword/forgotpassword.component.html","webpack:///./src/app/core/component/forgotpassword/forgotpassword.component.ts","webpack:///./src/app/core/component/forgotpassword-complete/forgotpassword-complete.component.html","webpack:///./src/app/core/component/forgotpassword-complete/forgotpassword-complete.component.ts","webpack:///./src/app/core/service/hub.service.ts","webpack:///./src/app/core/component/hub/hub-header.component.html","webpack:///./src/app/core/component/hub/hub-header.component.ts","webpack:///./src/app/core/component/hub/hub.component.html","webpack:///./src/app/core/component/hub/hub.component.ts","webpack:///./src/app/uasdm-app-routing.module.ts","webpack:///./src/app/core/service/http-error.interceptor.ts","webpack:///./src/app/uasdm-app.module.ts","webpack:///./src/app/shared/pipe/localize.pipe.ts","webpack:///./src/app/shared/service/event.service.ts","webpack:///./src/app/shared/component/password-strength-bar/password-strength-bar.component.ts","webpack:///./src/app/shared/component/password-strength-bar/password-strength-bar.component.html","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.ts","webpack:///./src/app/shared/component/loading-bar/loading-bar.component.html","webpack:///./src/main.ts","webpack:///./src/app/shared/component/profile/profile.component.ts","webpack:///./src/app/shared/component/profile/profile.component.html","webpack:///./src/app/shared/service/localization.service.ts","webpack:///./src/app/shared/service/profile.service.ts","webpack:///./src/app/shared/component/modal/basic-confirm-modal.component.ts","webpack:///./src/app/shared/component/modal/basic-confirm-modal.component.html","webpack:///./src/app/shared/component/modal/error-modal.component.ts","webpack:///./src/app/shared/component/modal/error-modal.component.html","webpack:///./src/app/shared/component/modal/notification-modal.component.ts","webpack:///./src/app/shared/component/modal/notification-modal.component.html","webpack:///./src/app/shared/component/header/header.component.ts","webpack:///./src/app/shared/component/header/header.component.html","webpack:///./src/app/shared/directive/must-match.directive.ts","webpack:///./src/app/shared/directive/password-validator.directive.ts","webpack:///./src/app/shared/service/session.service.ts","webpack:///./src/app/shared/component/boolean-field/boolean-field.component.ts","webpack:///./src/app/shared/component/boolean-field/boolean-field.component.html","webpack:///./src/app/shared/component/error-handler/error-handler.ts","webpack:///./src/app/shared/component/index.ts","webpack:///./src/app/shared/pipe/idmdate.pipe.ts","webpack:///./src/app/shared/pipe/safe-html.pipe.ts","webpack:///./src/app/shared/directive/phone-number.directive.ts","webpack:///./src/app/shared/pipe/keys.pipe.ts","webpack:///./src/app/shared/pipe/filter.pipe.ts","webpack:///./src/app/shared/service/progress.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/modal/step-indicator/modal-step-indicator.component.ts","webpack:///./src/app/shared/modal/step-indicator/modal-step-indicator.component.html","webpack:///./src/app/shared/pipe/phone.pipe.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","ModalTypes","AdminGuardService","service","router","route","state","this","isAdmin","navigate","AuthGuard","isLoggedIn","map","webpackAsyncContext","req","then","code","ids","id","keys","LocalizeComponent","text","decode","HttpBackendClient","handler","super","DateService","localizationService","overlapMessage","gapMessage","date","Date","getDateString","split","year","getFullYear","month","getMonth","dt","getDate","AuthService","user","loggedIn","userName","externalProfile","roles","check","cookieData","cookieDataJSON","JSON","parse","indexOf","UasdmAppComponent","LoginHeaderComponent","context","acp","modalService","username","password","keycloakEnabled","uasdmKeycloakEnabled","sub","params","subscribe","bsModalRef","show","backdrop","decodedError","replaceAll","content","location","href","login","response","showErrorAsDialog","onSubmit","http","eventService","headers","start","post","stringify","pipe","finalize","complete","toPromise","newPassword","token","ForgotPasswordComponent","emailIsSent","submit","ForgotPasswordCompleteComponent","passwordIsReset","unsubscribe","json","sessionService","profileService","logout","profile","class","HubComponent","authService","applications","buckets","application","url","routes","path","redirectTo","component","title","loadChildren","UasdmAppRoutingModule","provide","useClass","forRoot","next","handle","tap","status","getMessageFromError","UasdmAppModule","multi","LocalizePipe","EventService","listeners","listener","indexOfItem","PasswordStrengthBarComponent","colors","pass","score","letters","variations","digits","test","lower","upper","nonWords","variationCount","Math","trunc","idx","col","changes","currentValue","setBarColors","getColor","measureStrength","count","_n","LoadingBarComponent","showIndicator","registerListener","deregisterListener","process","env","ENV","bootstrapModule","success","log","catch","ProfileComponent","oid","firstName","lastName","email","changePassword","isExternalProfile","hide","unlock","cancel","LocalizationService","bundle","com","runwaysdk","Localize","localize","index","lastIndexOf","temp","ProfileService","account","set","BasicConfirmModalComponent","subText","submitText","cancelText","warning","onConfirm","confirm","ErrorModalComponent","NotificationModalComponent","UasdmHeaderComponent","admin","notificationCount","getUserName","tasksCount","MustMatchDirective","mustMatch","formGroup","controlName","matchingControlName","control","controls","matchingControl","errors","setErrors","useExisting","PasswordValidatorDirective","isValid","RegExp","passwordStrength","SessionService","setUser","BooleanFieldComponent","disabled","localizeLabelKey","label","valueChange","emit","toggle","unspecified","msg","localizedMessage","includes","IdmDatePipe","locale","format","transformed","transform","getTimezoneName","today","short","toLocaleDateString","full","timeZoneName","shortIndex","substring","replace","Intl","DateTimeFormat","resolvedOptions","timeZone","SafeHtmlPipe","sanitizer","args","bypassSecurityTrustResourceUrl","PhoneNumberValidatorDirective","phoneUtil","getInstance","phoneNumber","pNumber","parseAndKeepRawInput","isValidNumber","KeysPipe","Array","FilterPipe","items","prop","filter","it","ProgressService","progress","ngModule","providers","ModalStepIndicatorComponent","step","config","stepConfig","PhonePipe","number","INTERNATIONAL"],"mappings":"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","file":"uasdm-app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"uasdm-app\": 0,\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".chunk.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../dist/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([326,\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export enum ModalTypes {\n    \"warning\" = \"WARNING\",\n    \"danger\" = \"DANGER\"\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { AuthService} from '../service/auth.service';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class AdminGuardService implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isAdmin()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/profile' ]);\n    \n    return false;\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private service:AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    \n    if (this.service.isLoggedIn()) {\n      return true; \n    }\n    \n    this.router.navigate([ '/login' ]);\n    \n    return false;\n  }\n}\n","var map = {\n\t\"./admin/admin.module\": [\n\t\t188,\n\t\t\"vendor\",\n\t\t0,\n\t\t1\n\t],\n\t\"./site/site.module\": [\n\t\t187,\n\t\t\"vendor\",\n\t\t0,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 144;\nmodule.exports = webpackAsyncContext;","import { Input, Component, OnInit } from '@angular/core';\n\nimport { LocalizationService } from '../../service/localization.service';\n\n@Component({\n  \n  selector: 'localize',\n  templateUrl: './localize.component.html',\n  styleUrls: []\n})\nexport class LocalizeComponent implements OnInit {\n  @Input() key: string;\n  text: string;\n    \n  constructor(private service: LocalizationService) { }\n\n  ngOnInit(): void {\n    this.text = this.service.decode(this.key);\n  }\n}\n","{{text}}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\n\n@Injectable()\nexport class HttpBackendClient extends HttpClient {\n    constructor( handler: HttpBackend ) {\n        super( handler );\n    }\n}","import { Injectable } from '@angular/core';\n\nimport { LocalizationService } from './localization.service';\n\n@Injectable()\nexport class DateService {\n  overlapMessage = { \n    \"type\": \"ERROR\",  \n    \"message\":this.localizationService.decode(\"manage.versions.overlap.message\")\n  }\n  \n  gapMessage = {\n    \"type\": \"WARNING\",  \n    \"message\":this.localizationService.decode(\"manage.versions.gap.message\")\n  }\n\n  constructor(private localizationService: LocalizationService) {}\n  \n  public formatDateForDisplay(date: string | Date): string {\n    if(!date){\n      return \"\";\n    }\n    \n    if(date instanceof Date){\n      return this.getDateString(date);\n    }\n    else{\n      return date.split('T')[0];\n    }\n  }\n  \n  // @param value as yyyy-mm-dd\n  getDateFromDateString(value: string){\n    return new Date(+value.split(\"-\")[0], +value.split(\"-\")[1]-1, +value.split(\"-\")[2]);\n  }\n  \n  getDateString(date:Date): string {\n    if(date instanceof Date){\n      let year = date.getFullYear();\n      let month:number|string = date.getMonth()+1;\n      let dt:number|string = date.getDate();\n      \n      if (dt < 10) {\n        dt = '0' + dt;\n      }\n      if (month < 10) {\n        month = '0' + month;\n      }\n      \n      return year + \"-\" + month + \"-\" + dt;\n    }\n    \n    return null;\n  }\n\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\nimport { Injectable } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { User } from '../model/user';\n\n@Injectable()\nexport class AuthService {\n\tprivate user: User = {\n\t\tloggedIn: false,\n\t\tuserName: '',\n\t\texternalProfile: false,\n\t\troles: []\n\t};\n\n\tconstructor(private service: CookieService) {\n\n\t\tif (this.service.check(\"user\")) {\n\t\t\tlet cookieData: string = this.service.get(\"user\")\n\n\t\t\tlet cookieDataJSON: any = JSON.parse(cookieData);\n\n\t\t\tthis.user.userName = cookieDataJSON.userName;\n\t\t\tthis.user.roles = cookieDataJSON.roles;\n\t\t\tthis.user.externalProfile = cookieDataJSON.externalProfile;\n\t\t\tthis.user.loggedIn = true;\n\t\t}\n\t}\n\n\tsetUser(user: User): void {\n\t\tthis.user = user;\n\t}\n\n\tremoveUser(): void {\n\t\tthis.user = {\n\t\t\tloggedIn: false,\n\t\t\tuserName: '',\n\t\t\texternalProfile: false,\n\t\t\troles: []\n\t\t};\n\t}\n\n\tgetUserName(): string {\n\t\treturn this.user.userName;\n\t}\n\n\tisLoggedIn(): boolean {\n\t\treturn this.user.loggedIn;\n\t}\n\n\tisAdmin(): boolean {\n\t\treturn this.user.roles.indexOf(\"geoprism.admin.Administrator\") !== -1;\n\t}\n\t\n\tisExternalProfile(): boolean {\n\t  return this.user.externalProfile;\n\t}\n\n\tisWorker(): boolean {\n\t\treturn this.isAdmin() || this.user.roles.indexOf(\"geoprism.admin.DashboardBuilder\") !== -1;\n\t}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  \n  selector: 'uasdm-app',\n  templateUrl: './uasdm-app.component.html',\n  styleUrls: [],\n})\nexport class UasdmAppComponent {\n  constructor() {}\n}\n","<div id=\"innerFrameHtml\">        \n  <!-- MAIN CONTENT AND INJECTED VIEWS -->\n  <div id=\"main\">\n    <loading-bar></loading-bar>\n    <router-outlet></router-outlet>\n  </div>\n</div>","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component } from '@angular/core';\n\ndeclare var acp:string;\n\n@Component({\n  selector: 'login-header',\n  templateUrl: './login-header.component.html',\n  styleUrls: []\n})\nexport class LoginHeaderComponent {\n  context:string;\n\n  constructor() {\n    this.context = acp;\n  }\n}\n","    <!-- HEADER AND NAVBAR -->\n    <header>\n      <nav class=\"navbar navbar-default\">\n        <div class=\"container-fluid\">\n          <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" routerLink=\"/\" [title]=\"'userMenu.menuTooltip' | localize\">\n                <img [src]=\"context + '/logo/view?id=logo'\" />\n            </a>\n            <!-- <a class=\"navbar-brand\" routerLink=\"/admin\"><localize key=\"admin.link\"></localize></a> -->\n          </div>\n          \n          <!-- <ul class=\"nav navbar-nav navbar-right\">\n            <li dropdown>\n              <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle>\n                <localize key=\"admin.title\"></localize><span class=\"caret\"></span>\n              </a>            \n            </li>\n          </ul> -->\n        </div>\n      </nav>\n    </header>\n","<div id=\"login-page\" class=\"new-admin-design-main\">\n    <login-header></login-header>\n\n    <div class=\"vertical-center\">\n        <div id=\"app-container\" class=\"container\">\n\n            <div class=\"row\">\n                <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                <div class=\"col-md-6 col-sm-4 col-xs-8\">\n                    <div class=\"row\" style=\"margin-bottom: 25px;\">\n                        <div class=\"col-md-12\">\n\n                            <div class=\"heading text-center\">\n                                <h2>\n                                <!-- \n                                    <localize key=\"login.page.title\"></localize>\n                                    -->\n                                </h2>\n                                <!-- <p class=\"lead\">\n                                    <localize key=\"login.page.description\"></localize>\n                                </p> -->\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n\n                            <form id=\"login-form\" class=\"login\" #form=\"ngForm\" (ngSubmit)=\"form.valid && onSubmit()\">\n                                <div id=\"login-input-container\">\n                                    <div class=\"row\">\n                                        <input [(ngModel)]=\"username\" name=\"username\" type=\"text\"\n                                            [placeholder]=\"'login.username' | localize\" id=\"login\" required />\n                                        <input [(ngModel)]=\"password\" name=\"password\" type=\"password\"\n                                            [placeholder]=\"'login.password' | localize\" id=\"password\" required />\n                                        <a style=\"color:black;\" routerLink=\"/forgotpassword\" class=\"forgot-password\">\n                                            <localize key=\"login.forgotPassword\"></localize>\n                                        </a>\n                                    </div>\n                                    <!-- <p class=\"login-submit\"> -->\n                                    <div class=\"row\">\n                                        <button type=\"submit\" id=\"login-btn\" class=\"btn btn-primary\"\n                                            [disabled]=\"!(form.valid)\">\n                                            <localize key=\"login.button\"></localize>\n                                        </button>\n                                    </div>\n                                    <!-- </p> -->\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                    \n                    <div *ngIf=\"keycloakEnabled\" class=\"row\">\n                      <div class=\"col-md-12 text-center\">\n                        <div class=\"keycloak-or-line-family\">\n\t                        <h4 class=\"keycloak-or-line\"></h4>\n\t                        <span class=\"keycloak-or-text\">&nbsp;Or&nbsp;</span>\n\t                        <h4 class=\"keycloak-or-line\"></h4>\n                        </div>\n                        <button (click)=\"onClickKeycloak()\" class=\"keycloak-login-button btn btn-default\">\n                          <span class=\"keycloak-login-button-text\">\n                            Log in with \n                          </span>\n                          <span>\n\t\t\t\t\t\t\t\t\t            <img class=\"keycloak-login-button-image\" alt=\"Logo\" [src]=\"context + '/net/geoprism/images/geoplatform-logo-mini.svg'\" style=\"width:2em\">\n\t\t\t\t\t\t\t\t\t            <span class=\"keycloak-login-button-text\">GeoPlatform</span>\n                          </span>\n                        </button>\n                      </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nimport { Component } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\nimport { SessionService } from '@shared/service/session.service';\n\nimport { LoginHeaderComponent } from './login-header.component';\n\ndeclare var acp: any;\ndeclare var uasdmKeycloakEnabled: boolean;\n\n@Component( {\n    selector: 'login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n} )\nexport class LoginComponent {\n    context: string;\n    username: string = '';\n    password: string = '';\n    \n    private bsModalRef: BsModalRef;\n    \n    sub: Subscription;\n    \n    keycloakEnabled: boolean = uasdmKeycloakEnabled;\n\n    constructor( private service: SessionService, private router: Router, private route: ActivatedRoute, private modalService: BsModalService ) {\n        this.context = acp as string;\n    }\n    \n    ngOnInit(): void {\n      this.sub = this.route.params.subscribe(params => {\n      \n        if (params['errorMsg'] != null)\n        {\n          this.bsModalRef = this.modalService.show(ErrorModalComponent, { backdrop: true });\n          \n          let encodedError = params['errorMsg'];\n          let decodedError = encodedError.replaceAll(\"+\", \" \");\n          \n          this.bsModalRef.content.message = decodedError;\n        }\n      });\n    }\n\n    onClickKeycloak(): void {\n      window.location.href = this.context + \"/keycloak/loginRedirect\";\n    }\n\n    onSubmit(): void {\n      this.service.login( this.username, this.password ).then( response => {\n          this.router.navigate( ['/menu/true'] );\n      } );\n    }\n    \n    public error( err: HttpErrorResponse ): void {\n      this.bsModalRef = ErrorHandler.showErrorAsDialog(err, this.modalService);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from '@shared/service/event.service'\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ForgotPasswordService {\n\n\tconstructor(private http: HttpClient, private eventService: EventService) { }\n\n\tsubmit(username: string): Promise<void> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<void>(acp + '/forgotpassword/initiate', JSON.stringify({ username: username }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n\n\tcomplete(newPassword: string, token: string): Promise<void> {\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<void>(acp + '/forgotpassword/complete', JSON.stringify({ newPassword: newPassword, token: token }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise();\n\t}\n}\n","\n<form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content modal-body\">\n      <div>\n        <h3>\n          <localize key=\"forgotpassword.header\"></localize>\n        </h3>\n      </div>\n      <hr />\n      <div class=\"form-group\" *ngIf=\"!emailIsSent\">\n        <label>\n          <localize key=\"forgotpassword.username\"></localize>\n        </label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" required>\n      </div>\n      <div class=\"form-group\" *ngIf=\"emailIsSent\">\n        <div class=\"forgotpassword-email-is-sent\">\n          <localize key=\"forgotpassword.emailIsSent\"></localize>\n        </div>\n      </div>\n\n      <div *ngIf=\"!emailIsSent\" class=\"btn-holder\" style=\"text-align: right;\">\n        <input type=\"button\" [value]=\"'forgotpassword.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n        <input type=\"submit\" [value]=\"'forgotpassword.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n      </div>\n      <div *ngIf=\"emailIsSent\" class=\"btn-holder\" style=\"text-align: right;\">\n        <input type=\"button\" style=\"margin-top: 10px;\" [value]=\"'forgotpassword.ok' | localize\" class=\"btn btn-primary\" (click)=\"cancel()\" />\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ForgotPasswordService } from '../../service/forgotpassword.service';\n\n\n@Component({\n\tselector: 'forgotpassword',\n\ttemplateUrl: './forgotpassword.component.html',\n\tstyleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\tusername: string;\n\temailIsSent: boolean = false;\n\n\tconstructor(private service: ForgotPasswordService, private router: Router) { }\n\n\tngOnInit(): void {\n\n\t}\n\n\tcancel(): void {\n\t\tthis.router.navigate(['login']);\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.submit(this.username).then(response => {\n\t\t\tthis.emailIsSent = true;\n\t\t});\n\t}\n}\n","\n<div id=\"app-container\" class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-2\"></div>\n    <div class=\"col-lg-8\" *ngIf=\"!passwordIsReset\">\n      <form #form=\"ngForm\" (ngSubmit)=\"form.valid && onSubmit()\" [mustMatch]=\"['password', 'certainPassword']\">\n        <div>\n          <h1>\n            <localize key=\"forgotpassword-complete.header\"></localize>\n          </h1>\n        </div>\n        <div class=\"form-group\">\n          <label>\n            <localize key=\"forgotpassword-complete.newPassword\"></localize>\n          </label>\n          <input type=\"password\" [(ngModel)]=\"newPassword\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" passwordValidator>\n          <password-strength-bar [passwordToCheck]=\"newPassword\"> </password-strength-bar>\n          <div *ngIf=\"password.errors?.passwordStrength\" class=\"inline-error-message\">\n            The password must be at least 14 characters in length and must contain at least: Two uppercase letters [A-Z], two lowercase letters [a-z], two digits [0-9], and two special characters [e.g.: !@#$*&]\n          </div>          \n          \n        </div>\n        <div class=\"form-group\">\n          <label>\n            <localize key=\"account.certainPassword\"></localize>\n          </label>\n          <input type=\"password\" name=\"certainPassword\" [ngModel]=\"certainPassword\" #certainPassword=\"ngModel\" required />\n          <div *ngIf=\"certainPassword.errors?.mustMatch\" class=\"inline-error-message\">\n            <localize key=\"account.certainPassword.validation\"></localize>\n          </div>\n        </div>\n        <div *ngIf=\"!passwordIsReset\" class=\"btn-holder\" style=\"text-align: right;\">\n          <input type=\"button\" [value]=\"'forgotpassword-complete.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n          <input type=\"submit\" [value]=\"'forgotpassword-complete.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n        </div>\n      </form>\n    </div>\n    <div class=\"col-lg-8\" *ngIf=\"passwordIsReset\">\n      <div class=\"forgotpassword-complete-password-is-reset\">\n        <localize key=\"forgotpassword-complete.passwordIsReset\"></localize>\n      </div>\n\n      <div class=\"btn-holder\" style=\"text-align: right;\">\n        <input type=\"button\" style=\"margin-top: 10px;\" [value]=\"'forgotpassword-complete.ok' | localize\" class=\"btn btn-primary\" (click)=\"cancel()\" />\n      </div>\n    </div>\n    <div class=\"col-lg-2\"></div>\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ForgotPasswordService } from '../../service/forgotpassword.service';\n\n@Component({\n\ttemplateUrl: './forgotpassword-complete.component.html',\n\tstyleUrls: ['./forgotpassword-complete.component.css']\n})\nexport class ForgotPasswordCompleteComponent implements OnInit {\n\tnewPassword: string;\n\ttoken: string;\n\tpasswordIsReset: boolean = false;\n\tprivate sub: any;\n\n\tconstructor(\n\t\tprivate service: ForgotPasswordService,\n\t\tprivate router: Router,\n\t\tprivate route: ActivatedRoute) {\n\t}\n\n\tngOnInit() {\n\t\tthis.sub = this.route.params.subscribe(params => {\n\t\t\tthis.token = params['token'];\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.sub.unsubscribe();\n\t}\n\n\n\tcancel(): void {\n\t\tthis.router.navigate(['login']);\n\t}\n\n\tonSubmit(): void {\n\t\tthis.service.complete(this.newPassword, this.token).then(() => {\n\t\t\tthis.passwordIsReset = true;\n\t\t});\n\t}\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n// import 'rxjs/add/operator/toPromise';\n\nimport { Application } from '../model/application';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class HubService {\n\n    constructor( private http: HttpClient ) { }\n\n    applications(): Promise<Application[]> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        return this.http\n            .post( acp + '/menu/applications', { headers: headers } )\n            .toPromise()\n            .then(( response: any ) => {\n                return response.json() as Application[];\n            } )\n    }\n}\n","    <!-- HEADER AND NAVBAR -->\n    <header>\n      <nav class=\"navbar navbar-default\">\n        <div class=\"container-fluid\">\n          <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" routerLink=\"/\" [title]=\"'userMenu.menuTooltip' | localize\"><img [src]=\"context + '/logo/view?id=logo'\" /></a>\n            <!-- <a class=\"navbar-brand\" routerLink=\"/admin\"><localize key=\"admin.link\"></localize></a> -->\n          </div>\n          \n          <ul class=\"nav navbar-nav navbar-right\">\n            <li dropdown>\n              <!-- <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle>\n                <localize key=\"admin.title\"></localize><span class=\"caret\"></span>\n              </a>             -->\n              <a class=\"dropdown-toggle\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle> \n               <span class=\"glyphicon glyphicon-menu-hamburger\"></span> \n             </a>   \n              <ul *dropdownMenu class=\"dropdown-menu\">\n                <!-- <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/logos\" routerLinkActive=\"active\"><i></i><localize key=\"Icons\"></localize></a></li>\n                <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/email\" routerLinkActive=\"active\"><i></i><localize key=\"email.link\"></localize></a></li>\n                <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/accounts\" routerLinkActive=\"active\"><i></i><localize key=\"accounts.link\"></localize></a></li> -->\n\n                <li *ngIf=\"isAdmin\" role=\"menuitem\">\n                    <a class=\"user-command-link\" routerLink=\"/admin\"><localize key=\"geoprismLanding.administration\"></localize></a>\n                </li>\n                <li role=\"menuitem\">\n                    <a id=\"account-btn\" class=\"user-command-link link-active\" (click)=\"account()\"><localize key=\"userDashboards.account\"></localize></a>\n                </li>\n                <li role=\"menuitem\">\n                    <a class=\"user-command-link\" (click)=\"logout()\"><localize key=\"userDashboards.logout\"></localize></a>\n                </li>\n                    <!-- \n                <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/geotree\" routerLinkActive=\"active\"><i></i><localize key=\"Manage_Geoentities\"></localize></a></li>\n                <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/universaltree\" routerLinkActive=\"active\"><i></i><localize key=\"Manage_Universals\"></localize></a></li>\n                <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/classifiertree\" routerLinkActive=\"active\"><i></i><localize key=\"Term_Ontology_Admin\"></localize></a></li>\n                <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/browser\" routerLinkActive=\"active\"><i></i><localize key=\"databrowser.title\"></localize></a></li>\n -->                \n              </ul>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </header>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { ProfileService } from '@shared/service/profile.service';\nimport { SessionService } from '@shared/service/session.service';\n\nimport { ProfileComponent } from '@shared/component/profile/profile.component';\n\ndeclare var acp: string;\n\n@Component( {\n    selector: 'hub-header',\n    templateUrl: './hub-header.component.html',\n    styleUrls: []\n} )\nexport class HubHeaderComponent {\n    context: string;\n    @Input() isAdmin: boolean = false;\n    bsModalRef: BsModalRef;\n\n    constructor( private sessionService: SessionService,\n        private modalService: BsModalService,\n        private profileService: ProfileService,\n        private router: Router ) {\n        this.context = acp;\n    }\n\n    logout(): void {\n        this.sessionService.logout().then( response => {\n            this.router.navigate( ['/login'] );\n        } );\n    }\n\n    account(): void {\n        this.profileService.get().then( profile => {\n            this.bsModalRef = this.modalService.show( ProfileComponent, { backdrop: 'static', class: 'gray modal-lg' } );\n            this.bsModalRef.content.profile = profile;\n        } );\n    }\n\n}\n","<div class=\"body\">\n    <div class=\"new-admin-design-main\">\n\n        <hub-header [isAdmin]=\"isAdmin\"></hub-header>\n\n        <div id=\"app-container\" class=\"container-fluid\">\n                    <div class=\"nav-icon-container\">\n\n                        <div *ngIf=\"applications?.length > 0\" class=\"row-fluid vertical-center-row\">\n                            <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                            <div class=\"col-md-6 col-sm-4 col-xs-8\">\n                                <div *ngFor=\"let app of applications; let i = index;\" >\n\n                                    <div class=\"row\" *ngIf=\"i % 3 === 0\">\n                                        \n                                        <div *ngFor=\"let application of applications; let internalIndex = index;\">\n                                            <div *ngIf=\"internalIndex >= i && internalIndex < i + 3\" class=\"col-xs-12 col-sm-12 col-md-4 text-center\" (click)=\"open(application)\">\n                                                <div [id]=\"application.oid\" class=\"nav-option-wrapper\">\n                                                    <img class=\"nav-icon-img img-responsive\" [src]=\"context + '/' + application.src\" alt=\"Navigation\" />\n                                                    <h3 class=\"nav-icon-img-label\">{{application.label}}</h3>\n                                                    <p class=\"nav-icon-img-description\"> {{application.description}} </p>\n                                                </div>\n                                            </div>\n                                            <div *ngIf=\"applications?.length === 1 || applications?.length === 2\" class=\"col-xs-12 col-sm-12 col-md-4\"></div>\n                                            <div *ngIf=\"applications?.length === 1\" class=\"col-xs-12 col-sm-12 col-md-4\"></div>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3 col-sm-4 col-xs-2\"></div>\n                        </div>\n                    </div>\n\n        </div>\n    </div>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\nimport { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '@shared/service/auth.service';\nimport { Application } from '../../model/application';\nimport { HubService } from '../../service/hub.service';\n\ndeclare var acp: any;\n\n@Component( {\n    selector: 'hub',\n    templateUrl: './hub.component.html',\n    styleUrls: ['./hub.component.css']\n} )\nexport class HubComponent implements OnInit {\n    context: string;\n    applications: Application[] = [];\n    isAdmin: boolean = false;\n    buckets: string = 'col-sm-6';\n\n    constructor( private service: HubService,\n        private authService: AuthService,\n    ) {\n\n        this.context = acp as string;\n    }\n\n    ngOnInit(): void {\n        this.service.applications().then( applications => {\n            this.applications = applications;\n        } );\n\n        this.isAdmin = this.authService.isAdmin();\n    }\n\n    //   logout():void {\n    //     this.sessionService.logout().then(response => {\n    //       this.router.navigate(['/login']);\t  \n    //     }); \t  \n    //   }\n\n    open( application: Application ): void {\n        window.location.href = this.context + '/' + application.url;\n    }\n\n    //   account():void{\n    //     this.profileService.get().then(profile => {\n    //       this.bsModalRef = this.modalService.show(ProfileComponent, {backdrop: 'static', class: 'gray modal-lg'});\n    //       this.bsModalRef.content.profile = profile;\n    //     });\n    //   }\n}\n","import { NgModule } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './core/component/login/login.component'\nimport { ForgotPasswordComponent } from './core/component/forgotpassword/forgotpassword.component'\nimport { ForgotPasswordCompleteComponent } from './core/component/forgotpassword-complete/forgotpassword-complete.component'\nimport { HubComponent } from './core/component/hub/hub.component';\n\nconst routes: Routes = [\n    {\n        path: 'menu',\n        redirectTo: '/site/viewer',\n    },\n    {\n        path: 'login',\n        component: LoginComponent,\n        data: { title: 'login.title' }\n    },\n    {\n        path: 'login/:errorMsg',\n        component: LoginComponent,\n        data: { title: 'login.title' }\n    },\n    {\n        path: 'forgotpassword',\n        component: ForgotPasswordComponent,\n        data: { title: 'useraccounts.title' }\n    },\n    {\n        path: 'forgotpassword-complete/:token',\n        component: ForgotPasswordCompleteComponent\n    },\n    {\n        path: 'admin',\n        //        canActivate: [AdminGuardService],\n        loadChildren: './admin/admin.module#AdminModule'\n    },\n    {\n        path: 'site',\n        //        canActivate: [AdminGuardService],\n        loadChildren: './site/site.module#SiteModule'\n    },\n    {\n        path: '**',\n        redirectTo: '/site/viewer',\n    }\n];\n\n@NgModule( {\n    imports: [RouterModule.forRoot( routes )],\n    exports: [RouterModule],\n    providers: [{ provide: LocationStrategy, useClass: HashLocationStrategy }]\n} )\nexport class UasdmAppRoutingModule { }\n\nexport const routedComponents = [LoginComponent, HubComponent, ForgotPasswordComponent, ForgotPasswordCompleteComponent];\n","import { Injectable } from '@angular/core';\nimport {\n    HttpEvent,\n    HttpInterceptor,\n    HttpHandler,\n    HttpRequest,\n    HttpResponseBase,\n    HttpErrorResponse\n} from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { ErrorHandler, ErrorModalComponent } from '@shared/component';\n\n\ndeclare var acp: string;\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n    /*\n     * Reference to the modal current showing\n    */\n    private bsModalRef: BsModalRef;\n\n    constructor( private modalService: BsModalService ) { }\n\n    intercept( request: HttpRequest<any>, next: HttpHandler ): Observable<HttpEvent<any>> {\n\n        return next.handle( request ).pipe(tap(( event: HttpEvent<any> ) => {\n            if ( event instanceof HttpResponseBase ) {\n                const response = event as HttpResponseBase;\n                if ( response.status === 302 ) {\n                    window.location.href = acp + '/project/management#/login';\n                    return;\n                }\n            }\n        }, ( err: HttpErrorResponse ) => {\n            if ( err instanceof HttpErrorResponse ) {\n                if ( err.status === 401 || err.status === 403 ) {\n                    // redirect to the login route\n                    // or show a modal\n                    window.location.href = acp + '/project/management#/login';\n                }\n                else {\n                    this.bsModalRef = this.modalService.show( ErrorModalComponent, { backdrop: true } );\n                    this.bsModalRef.content.message = ErrorHandler.getMessageFromError(err);\n                }\n            }\n        } ));\n    }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n//import { TreeModule } from 'angular-tree-component';\n//import { ContextMenuModule } from 'ngx-contextmenu';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { CookieService } from 'ngx-cookie-service';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\n\nimport './rxjs-extensions';\n\nimport { UasdmAppComponent } from './uasdm-app.component';\nimport { UasdmAppRoutingModule, routedComponents } from './uasdm-app-routing.module';\n\nimport { HubService } from './core/service/hub.service';\nimport { ForgotPasswordService } from './core/service/forgotpassword.service';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpErrorInterceptor } from './core/service/http-error.interceptor';\n\nimport { HubHeaderComponent } from './core/component/hub/hub-header.component';\nimport { LoginHeaderComponent } from './core/component/login/login-header.component';\n\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { SharedModule } from './shared/shared.module';\nimport { DatePipe } from '@angular/common';\n\n@NgModule( {\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        UasdmAppRoutingModule,\n//        TreeModule.forRoot(),\n//        ContextMenuModule.forRoot(),\n        //        ModalModule.forRoot(),\n        AlertModule.forRoot(),\n        BsDropdownModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        AccordionModule.forRoot(),\n        NgxPaginationModule,\n        SharedModule.forRoot(),\n        CollapseModule.forRoot()\n    ],\n    declarations: [\n        UasdmAppComponent,\n        HubHeaderComponent,\n        LoginHeaderComponent,\n\n        // Routing components\n        routedComponents\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: HttpErrorInterceptor,\n            multi: true\n        },\n        CookieService,\n        ForgotPasswordService,\n        HubService,\n        DatePipe\n    ],\n    bootstrap: [UasdmAppComponent],\n    entryComponents: []\n} )\nexport class UasdmAppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { LocalizationService } from '../service/localization.service';\n\n@Pipe({name: 'localize'})\nexport class LocalizePipe implements PipeTransform {\n  constructor(private service: LocalizationService) { }\n\t\n  transform(value: string): string {\n    return this.service.decode(value);\n  }\n}\n\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface IEventListener {\r\n    start(): void;\r\n    complete(): void;\r\n}\r\n\r\n@Injectable()\r\nexport class EventService {\r\n    private listeners: IEventListener[] = [];\r\n\r\n    public constructor() { }\r\n\r\n    public registerListener( listener: IEventListener ): void {\r\n        this.listeners.push( listener );\r\n    }\r\n\r\n    public deregisterListener( listener: IEventListener ): boolean {\r\n        let indexOfItem = this.listeners.indexOf( listener );\r\n\r\n        if ( indexOfItem === -1 ) {\r\n            return false;\r\n        }\r\n\r\n        this.listeners.splice( indexOfItem, 1 );\r\n\r\n        return true;\r\n    }\r\n\r\n    public start(): void {\r\n        for ( const listener of this.listeners ) {\r\n            listener.start();\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        for ( const listener of this.listeners ) {\r\n            listener.complete();\r\n        }\r\n    }\r\n}\r\n","\nimport { Component, OnChanges, Input, SimpleChange } from '@angular/core';\n\n@Component({\n\tselector: 'password-strength-bar',\n\ttemplateUrl: './password-strength-bar.component.html',\n\tstyleUrls: ['./password-strength-bar.component.css']\n})\nexport class PasswordStrengthBarComponent implements OnChanges {\n\n\t@Input() passwordToCheck: string;\n\tbar0: string;\n\tbar1: string;\n\tbar2: string;\n\tbar3: string;\n\tbar4: string;\n\n\tprivate colors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];\n\n\tprivate static measureStrength(pass: string) {\n\t\tlet score = 0;\n\t\t// award every unique letter until 5 repetitions  \n\t\tlet letters = {};\n\t\tfor (let i = 0; i < pass.length; i++) {\n\t\t\tletters[pass[i]] = (letters[pass[i]] || 0) + 1;\n\t\t\tscore += 5.0 / letters[pass[i]];\n\t\t}\n\t\t// bonus points for mixing it up  \n\t\tlet variations = {\n\t\t\tdigits: /\\d/.test(pass),\n\t\t\tlower: /[a-z]/.test(pass),\n\t\t\tupper: /[A-Z]/.test(pass),\n\t\t\tnonWords: /\\W/.test(pass),\n\t\t};\n\n\t\tlet variationCount = 0;\n\t\tfor (let check in variations) {\n\t\t\tvariationCount += (variations[check]) ? 1 : 0;\n\t\t}\n\t\tscore += (variationCount - 1) * 10;\n\t\treturn Math.trunc(score);\n\t}\n\n\tprivate getColor(score: number) {\n\t\tlet idx = 0;\n\t\tif (score > 90) {\n\t\t\tidx = 4;\n\t\t} else if (score > 70) {\n\t\t\tidx = 3;\n\t\t} else if (score >= 40) {\n\t\t\tidx = 2;\n\t\t} else if (score >= 20) {\n\t\t\tidx = 1;\n\t\t}\n\t\treturn {\n\t\t\tidx: idx + 1,\n\t\t\tcol: this.colors[idx]\n\t\t};\n\t}\n\n\tngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n\t\tvar password = changes['passwordToCheck'].currentValue;\n\t\tthis.setBarColors(5, '#DDD');\n\t\tif (password) {\n\t\t\tlet c = this.getColor(PasswordStrengthBarComponent.measureStrength(password));\n\t\t\tthis.setBarColors(c.idx, c.col);\n\t\t}\n\t}\n\tprivate setBarColors(count, col) {\n\t\tfor (let _n = 0; _n < count; _n++) {\n\t\t\tthis['bar' + _n] = col;\n\t\t}\n\t}\n\n}  \n","<div style=\"margin: 11px;\" id=\"strength\" #strength>\n    <ul id=\"strengthBar\">\n        <li class=\"point\" [style.background-color]=\"bar0\"></li>\n        <li class=\"point\" [style.background-color]=\"bar1\"></li>\n        <li class=\"point\" [style.background-color]=\"bar2\"></li>\n        <li class=\"point\" [style.background-color]=\"bar3\"></li>\n        <li class=\"point\" [style.background-color]=\"bar4\"></li>\n    </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { EventService, IEventListener } from '../../service/event.service';\n\n@Component({\n  \n  selector: 'loading-bar',\n  templateUrl: './loading-bar.component.html',\n  styleUrls: []\n})\nexport class LoadingBarComponent implements OnInit, IEventListener {\n  showIndicator: boolean = false;\n\n  constructor(private service: EventService) { }\n\n  ngOnInit(): void {\n    this.service.registerListener(this);\n  }\n  \n  ngOnDestroy(): void {\n    this.service.deregisterListener(this);\n  }\n  \n  start(): void {\n    this.showIndicator = true;    \n  }\n  \n  complete(): void {\n    this.showIndicator = false;    \n  }    \n}\n","<div *ngIf=\"showIndicator\" class=\"standby-overlay\" style=\"height: 100%; width: 100%; z-index: 100;\">\n\n</div>","/// <reference types=\"node\" />\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { UasdmAppModule } from './app/uasdm-app.module';\n\n//console.log(\"uasdm main.ts\");\n\nif (process.env.ENV === 'production') {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(UasdmAppModule)\n  .then(success => console.log('Bootstrap success'))\n  .catch(error => console.log(error));\n\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component} from '@angular/core';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\nimport { Profile } from '../../model/profile';\nimport { ProfileService } from '../../service/profile.service';\n\nimport { AuthService } from '../../service/auth.service';\n\n\n@Component({  \n  selector: 'profile',\n  templateUrl: './profile.component.html',\n  styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class ProfileComponent {\n  public profile:Profile = {\n    oid: '',\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    changePassword:false    \n  };\n  \n  externalProfile: boolean = false;\n  \n  constructor(private authService: AuthService, private service:ProfileService, public bsModalRef: BsModalRef) {}\n  \n  ngOnInit(): void {\n    this.externalProfile = this.authService.isExternalProfile();\n  }\n  \n  onSubmit():void {\n    if(!this.profile.changePassword) {\n      delete this.profile.password;\n    }\n\t  \n    this.service.apply(this.profile).then(profile => {\n      this.bsModalRef.hide();\n    });\n  }  \n  \n  cancel():void {\n    if (!this.externalProfile)\n    {\n      this.service.unlock(this.profile.oid).then(profile => {\n        this.bsModalRef.hide();\n      });\n    }\n    else\n    {\n      this.bsModalRef.hide();\n    }\n  }  \n}\n","<div class=\"modal-body\">\n\n  <form #form=\"ngForm\" (ngSubmit)=\"form.valid && onSubmit()\" [mustMatch]=\"['password', 'certainPassword']\">\n    <div class=\"heading\">\n      <h3>User Profile</h3>\n    </div>\n    <hr>\n    <div class=\"form-group\">\n      <label>\n        <localize key=\"account.firstname\"></localize>\n      </label>\n      <input [disabled]=\"externalProfile\" type=\"text\" [(ngModel)]=\"profile.firstName\" name=\"firstname\" required>\n    </div>\n    <div class=\"form-group\">\n      <label>\n        <localize key=\"account.lastname\"></localize>\n      </label>\n      <input [disabled]=\"externalProfile\" type=\"text\" [(ngModel)]=\"profile.lastName\" name=\"lastname\" required>\n    </div>\n    <div class=\"form-group\">\n      <label>\n        <localize key=\"account.email\"></localize>\n      </label>\n      <input [disabled]=\"externalProfile\" type=\"email\" [(ngModel)]=\"profile.email\" name=\"email\" #aemail=\"ngModel\" required email>\n      <div *ngIf=\"aemail.errors?.email\" class=\"inline-error-message\">\n        <localize key=\"account.email.validation\"></localize>\n      </div>\n    </div>\n\n    <div class=\"heading\">\n      <h3>\n        <localize key=\"account.info.heading\"></localize>\n      </h3>\n    </div>\n    <hr>\n\n    <div class=\"form-group\">\n      <label>\n        <localize key=\"account.username\"></localize>\n      </label>\n      <input [disabled]=\"profile.username === 'admin' || externalProfile\" type=\"text\" [(ngModel)]=\"profile.username\" name=\"username\" required>\n    </div>\n\n    <div *ngIf=\"!externalProfile\" class=\"form-group\">\n      <boolean-field [(value)]=\"profile.changePassword\" [label]=\"'account.changePassword' | localize\"></boolean-field>\n    </div>\n\n    <div *ngIf=\"profile.changePassword && !externalProfile\">\n      <div class=\"form-group\">\n        <label>\n          <localize key=\"account.password\"></localize>\n        </label>\n        <input type=\"password\" [(ngModel)]=\"profile.password\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" passwordValidator>\n        <password-strength-bar [passwordToCheck]=\"profile.password\"></password-strength-bar>\n        <div *ngIf=\"password.errors?.passwordStrength\" class=\"inline-error-message\">\n          The password must be at least 14 characters in length and must contain at least: Two uppercase letters [A-Z], two lowercase letters [a-z], two digits [0-9], and two special characters [e.g.: !@#$*&]\n        </div>                  \n      </div>\n      <div class=\"form-group\">\n        <label>\n          <localize key=\"account.certainPassword\"></localize>\n        </label>\n        <input type=\"password\" name=\"certainPassword\" [ngModel]=\"certainPassword\" #certainPassword=\"ngModel\" required />\n        <div *ngIf=\"certainPassword.errors && certainPassword.errors.mustMatch\" class=\"inline-error-message\">\n          <localize key=\"account.certainPassword.validation\"></localize>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"btn-holder\" style=\"text-align: right;\">\n      <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />\n      <input *ngIf=\"!externalProfile\" type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n    </div>\n  </form>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\n\ndeclare var com: any\n\n@Injectable()\nexport class LocalizationService {\n\n  public localize(bundle: string, key: string): string {\n    return com.runwaysdk.Localize.localize(bundle, key);\n  }\n    \n  public get(key: string): string {\n    return com.runwaysdk.Localize.get(key);\n  }\n  \n  public decode(key: string): string {\n    let index = key.lastIndexOf('.');\n    \n    if(index !== -1) {\n      \n      let temp = [key.slice(0, index), key.slice(index + 1)]\n    \n      return this.localize(temp[0], temp[1]);\n    }\n    else {\n      return this.get(key);\n    }\n  }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\n\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from './event.service';\n\nimport { Profile } from '../model/profile';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class ProfileService {\n\n    constructor( private eventService: EventService, private http: HttpClient ) { }\n\n    get(): Promise<Profile> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        return this.http\n            .post<Profile>( acp + '/account/get', { headers: headers } )\n            .toPromise()\n    }\n\n\n    apply( profile: Profile ): Promise<Profile> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Profile>( acp + '/account/apply', JSON.stringify( { account: profile } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise()\n    }\n\n    unlock( oid: string ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/account/unlock', JSON.stringify( { oid: oid } ), { headers: headers } )\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n            .toPromise()\n    }\n\n    tasksCount(): Promise<{tasksCount:number}> {\n        \n        const statuses:string[] = ['Error', 'Failed'];\n\n        // status options: PROCESSING, COMPLETE, ERROR, QUEUED\n        let params: HttpParams = new HttpParams();\n        params = params.set('statuses', JSON.stringify(statuses));\n\n        return this.http\n            .get<{tasksCount:number}>(acp + '/project/tasks-count', { params: params })\n            .toPromise()\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { ModalTypes } from '../../model/modal';\n\n@Component( {\n    selector: 'basic-confirm-modal',\n    templateUrl: './basic-confirm-modal.component.html',\n    styleUrls: []\n} )\nexport class BasicConfirmModalComponent {\n    /*\n     * Message\n     */\n    @Input() message: string = 'Are you sure?';\n\n    @Input() subText: string = null;\n\n    @Input() data: any;\n\n    @Input() submitText: string = 'Submit';\n\n    @Input() cancelText: string = 'Cancel'; \n\n    @Input() type: ModalTypes = ModalTypes.warning;\n\n    /*\n     * Called on confirm\n     */\n    public onConfirm: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n        this.onConfirm = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onConfirm.next( this.data );\n    }\n}\n","<div>\n  <div class=\"modal-body\" style=\"margin-top: 30px; margin-bottom: 30px;\">\n    <p >{{message}}</p>\n    <p *ngIf=\"subText != null\" [innerHtml]=\"subText\"></p>\n  </div>\n  <div class=\"modal-footer\">\n    <div class=\"btn-holder\" style=\"text-align: right;\">\n      <button type=\"button\" (click)=\"bsModalRef.hide()\" class=\"btn btn-default\" role=\"button\" aria-disabled=\"false\" style=\"padding: 4px 18px;\">{{cancelText}}</button>\n      <button type=\"button\" (click)=\"confirm()\" [ngClass]=\"type === 'DANGER' ? 'btn-danger' : 'btn-primary'\" class=\"btn\" role=\"button\" aria-disabled=\"false\" style=\"padding: 4px 18px;\">{{submitText}}</button>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component( {\n    selector: 'error-modal',\n    templateUrl: './error-modal.component.html',\n    styleUrls: ['./error-modal.css']\n} )\nexport class ErrorModalComponent {\n    /*\n     * Message\n     */\n    @Input() message: string = 'Unable to complete your action';\n\n    constructor( public bsModalRef: BsModalRef ) { }\n}\n","<div class=\"modal-body error-modal text-center\">\n    <form class=\"modal-form\">\n        <p>{{message}}</p>\n\n        <!-- <div class=\"row\"> -->\n            <div class=\"button-holder\">\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Close</button>\n            </div>\n        <!-- </div> -->\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { ModalTypes } from '../../model/modal';\n\n@Component( {\n    selector: 'notification-modal',\n    templateUrl: './notification-modal.component.html',\n    styleUrls: []\n} )\nexport class NotificationModalComponent {\n    /*\n     * Message\n     */\n    @Input() message: string = '';\n\n    @Input() data: any;\n\n    @Input() submitText: string = 'Submit';\n\n    @Input() type: ModalTypes = ModalTypes.warning;\n\n    /*\n     * Called on confirm\n     */\n    public onConfirm: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef ) { }\n\n    ngOnInit(): void {\n        this.onConfirm = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onConfirm.next( this.data );\n    }\n}\n","<div>\n  <div class=\"modal-body\" style=\"margin-top: 30px; margin-bottom: 30px;\">\n    <p>{{message}}</p>\n  </div>\n  <div class=\"modal-footer\">\n    <div class=\"btn-holder\" style=\"text-align: right;\">\n      <button type=\"button\" (click)=\"confirm()\" [ngClass]=\"type === 'DANGER' ? 'btn-danger' : 'btn-primary'\" class=\"btn\" role=\"button\" aria-disabled=\"false\" style=\"padding: 4px 18px;\">\n        <span class=\"ui-button-text\">{{submitText}}</span>\n      </button>\n    </div>\n  </div>\n</div>","import { Component, Input } from '@angular/core';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ProfileService } from '../../service/profile.service';\nimport { ProfileComponent } from '../profile/profile.component';\n\nimport { AuthService } from '../../service/auth.service';\n\ndeclare var acp: any;\n\n@Component( {\n\n    selector: 'uasdm-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.css']\n} )\nexport class UasdmHeaderComponent {\n    context: string;\n    userName: string = \"\";\n    admin: boolean = false;\n    externalProfile: boolean = false;\n    bsModalRef: BsModalRef;\n    notificationCount: number = 0;\n\n    @Input() title: string;\n\n\n    constructor( private authService: AuthService, private modalService: BsModalService, private profileService: ProfileService ) {\n        this.context = acp;\n    }\n\n    ngOnInit(): void {\n\n        this.userName = this.authService.getUserName();\n        this.admin = this.authService.isAdmin();\n        this.externalProfile = this.authService.isExternalProfile();\n\n        this.profileService.tasksCount().then(data => {\n\n\t\t\tthis.notificationCount = data.tasksCount\n\n\t\t});\n    }\n\n    account(): void {\n        this.profileService.get().then( profile => {\n            this.bsModalRef = this.modalService.show( ProfileComponent, { backdrop: 'static', class: 'gray modal-lg' } );\n            this.bsModalRef.content.profile = profile;\n        } );\n    }\n\n}\n","<!-- HEADER AND NAVBAR -->\n<header>\n  <nav class=\"navbar navbar-default\">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <a class=\"navbar-brand\" href=\"{{context}}/project/management#/menu\" title=\"Home\">\n          <img [src]=\"context + '/logo/view?id=logo'\" />\n        </a>\n        <!-- <p class=\"navbar-brand\" style=\"margin: 0;\" >{{title}}</p> -->\n      </div>\n\n      <ul class=\"nav navbar-nav navbar-right\">\n        <li dropdown>\n          <a class=\"dropdown-toggle\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle>\n            <span class=\"glyphicon glyphicon-menu-hamburger\">\n              <span *ngIf=\"notificationCount > 0\" class=\"task-badge\" [ngClass]=\"{'double-digit': notificationCount > 9}\">{{notificationCount}}</span>\n            </span>\n          </a>\n\n          <ul *dropdownMenu class=\"dropdown-menu\">\n            <li role=\"menuitem\">\n              <a id=\"account-btn\" class=\"user-command-link link-active\" (click)=\"account()\">\n                <localize key=\"userDashboards.account\"></localize>\n              </a>\n            </li>\n            <li role=\"menuitem\">\n              <a class=\"dropdown-item\" routerLink=\"/site/tasks\" routerLinkActive=\"active\">Workflow Tasks</a>\n            </li>\n            <!-- <li role=\"menuitem\">\n              <a class=\"dropdown-item\" routerLink=\"/site/upload\" routerLinkActive=\"active\">Collection Upload</a>\n            </li> -->\n            <li role=\"menuitem\">\n              <a class=\"dropdown-item\" routerLink=\"/site/viewer\" routerLinkActive=\"active\">Site Viewer</a>\n            </li>\n            <hr *ngIf=\"admin\">\n\n            <li *ngIf=\"admin\" role=\"menuitem\">\n              <a class=\"dropdown-item\" routerLink=\"/admin/accounts\" routerLinkActive=\"active\">\n                <i></i>\n                <localize key=\"accounts.link\"></localize>\n              </a>\n            </li>\n            <li *ngIf=\"admin\" role=\"menuitem\">\n              <a class=\"dropdown-item\" routerLink=\"/admin/session-events\" routerLinkActive=\"active\">\n                <i></i>\n                Session event log\n              </a>\n            </li>            \n            <li *ngIf=\"admin\" role=\"menuitem\">\n              <a class=\"dropdown-item\" routerLink=\"/admin/logos\" routerLinkActive=\"active\">\n                <i></i>\n                <localize key=\"Icons\"></localize>\n              </a>\n            </li>\n            <li *ngIf=\"admin\" role=\"menuitem\">\n              <a class=\"dropdown-item\" routerLink=\"/admin/email\" routerLinkActive=\"active\">\n                <i></i>\n                <localize key=\"email.link\"></localize>\n              </a>\n            </li>\n            <li *ngIf=\"admin\" role=\"menuitem\">\n              <a class=\"dropdown-item\" routerLink=\"/site/sensors\" routerLinkActive=\"active\">Sensors</a>\n            </li>\n            <li *ngIf=\"admin\" role=\"menuitem\">\n              <a class=\"dropdown-item\" routerLink=\"/site/platforms\" routerLinkActive=\"active\">Platforms</a>\n            </li>\n            <li *ngIf=\"admin\" role=\"menuitem\">\n              <a class=\"dropdown-item\" routerLink=\"/admin/system-info\" routerLinkActive=\"active\">\n                <i></i>System Info\n              </a>\n            </li>\n\n            <hr>\n            <li role=\"menuitem\">\n              <a class=\"dropdown-item\" href=\"{{context}}/session/logout\">Log out</a>\n            </li>\n          </ul>\n        </li>\n      </ul>\n\n      <div class=\"navbar-right user-indicator\">\n        <p class=\"navbar-text\">\n          Logged in as <b style=\"color: white;\">{{userName}}</b>\n        </p>\n      </div>\n\n    </div>\n  </nav>\n</header>\n","import { Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidationErrors, FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n\treturn (formGroup: FormGroup) => {\n\t\tconst control = formGroup.controls[controlName];\n\t\tconst matchingControl = formGroup.controls[matchingControlName];\n\n\t\t// return null if controls haven't initialised yet\n\t\tif (!control || !matchingControl) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// return null if another validator has already found an error on the matchingControl\n\t\tif (matchingControl.errors && !matchingControl.errors.mustMatch) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// set error on matchingControl if validation fails\n\t\tif (control.value !== matchingControl.value) {\n\t\t\tmatchingControl.setErrors({ mustMatch: true });\n\t\t} else {\n\t\t\tmatchingControl.setErrors(null);\n\t\t}\n\t}\n}\n\n@Directive({\n\tselector: '[mustMatch]',\n\tproviders: [{ provide: NG_VALIDATORS, useExisting: MustMatchDirective, multi: true }]\n})\nexport class MustMatchDirective implements Validator {\n\t@Input('mustMatch') mustMatch: string[] = [];\n\n\tvalidate(formGroup: FormGroup): ValidationErrors {\n\t\treturn MustMatch(this.mustMatch[0], this.mustMatch[1])(formGroup);\n\t}\n}","import { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\nimport { Directive } from '@angular/core';\n\n@Directive({\n\tselector: '[passwordValidator]',\n\tproviders: [{\n\t\tprovide: NG_VALIDATORS,\n\t\tuseExisting: PasswordValidatorDirective,\n\t\tmulti: true\n\t}]\n})\nexport class PasswordValidatorDirective implements Validator {\n\n\tvalidate(control: AbstractControl): { [key: string]: any } | null {\n\n\t\tconsole.log(\"Checking password strength\");\n\n\t\tif (control.value != null && control.value !== '') {\n\n\t\t\tlet isValid: boolean = true;\n\n\t\t\tif (!RegExp('(?=.*[0-9].*[0-9]).*').test(control.value)) {\n\t\t\t\tisValid = false;\n\t\t\t}\n\n\t\t\tif (!RegExp('(?=.*[a-z].*[a-z]).*').test(control.value)) {\n\t\t\t\tisValid = false;\n\t\t\t}\n\n\t\t\tif (!RegExp('(?=.*[A-Z].*[A-Z]).*').test(control.value)) {\n\t\t\t\tisValid = false;\n\t\t\t}\n\n\t\t\tif (!RegExp('(?=.*[~!@#$%^&*()_-].*[~!@#$%^&*()_-]).*').test(control.value)) {\n\t\t\t\tisValid = false;\n\t\t\t}\n\n\t\t\tif (isValid) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn { passwordStrength: true };\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n// import 'rxjs/add/operator/toPromise';\nimport { finalize } from 'rxjs/operators';\n\nimport { EventService } from './event.service';\n\nimport { AuthService } from './auth.service';\nimport { User } from '../model/user';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SessionService {\n\n\tconstructor(private eventService: EventService, private http: HttpClient, private authService: AuthService) {\n\t}\n\n\tlogin(username: string, password: string): Promise<User> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<User>(acp + '/session/login', JSON.stringify({ username: username, password: password }), { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise()\n\t\t\t.then((user: User) => {\n\t\t\t\tthis.authService.setUser(user);\n\n\t\t\t\treturn user;\n\t\t\t})\n\t}\n\n\tlogout(): Promise<void> {\n\n\t\tlet headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.eventService.start();\n\n\t\treturn this.http\n\t\t\t.post<void>(acp + '/session/logout', { headers: headers })\n\t\t\t.pipe(finalize(() => {\n\t\t\t\tthis.eventService.complete();\n\t\t\t}))\n\t\t\t.toPromise()\n\t\t\t.then(() => {\n\t\t\t\tthis.authService.setUser(null);\n\n\t\t\t\treturn;\n\t\t\t})\n\t}\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n\tselector: 'boolean-field',\n\ttemplateUrl: './boolean-field.component.html',\n\tstyles: ['.modal-form .holder .check-block .chk-area {margin: 10px 0px 0 0;}']\n})\nexport class BooleanFieldComponent {\n\n\t@Input() value: boolean = false;\n\t@Input() disabled: boolean = false;\n\t@Input() localizeLabelKey: string = \"\"; // localization key used to localize in the component template\n\t@Input() label: string = \"\"; // raw string input\n\n\t@Output() public valueChange = new EventEmitter<boolean>();\n\n\tconstructor() { }\n\n\ttoggle(): void {\n\t\tif (!this.disabled) {\n\t\t\tthis.value = !this.value;\n\n\t\t\tthis.valueChange.emit(this.value);\n\t\t}\n\t}\n}","<div>\n  <div class=\"check-block form-group\">\n    <div (click)=\"toggle()\" [ngClass]=\"{'chk-checked' : value}\" ng-style=\"chkstyle\" class=\"jcf-unselectable chk-area\">\n      <span></span>\n    </div>\n\n    <label *ngIf=\"label.length > 0\" class=\"checkbox-label\">{{label}}</label>\n    <label *ngIf=\"localizeLabelKey.length > 0\" class=\"checkbox-label\">\n      <localize key=\"{{localizeLabelKey}}\"></localize>\n    </label>\n  </div>\n  <!-- Force a line break somehow -->\n  <div class=\"row\">\n  </div>\n</div>","import { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { ErrorModalComponent } from '@shared/component';\n\nexport class ErrorHandler {\n    static getMessageFromError(err: any): string {\n    \n      var unspecified = \"An unspecified error has occurred.  Please try your operation again.  If the problem continues, alert your technical support staff.\";\n    \n      if (err == null)\n      {\n        return unspecified;\n      }\n      else\n      {\n        console.log(\"An error has occurred: \", err);\n      }\n      \n      let msg = null;\n      \n      if (err.error != null && (typeof err.error === 'object'))\n      {\n        msg = err.error.localizedMessage || err.error.message;\n      }\n      \n      if (msg == null)\n      {\n        msg = err.message || err.msg || err.localizedMessage;\n      }\n      \n      if (msg != null && msg.includes(\"##tferrormsg##\"))\n      {\n        var split = msg.split(\"##tferrormsg##\");\n        return split[2];\n      }\n      \n      if (msg == null)\n      {\n        msg = unspecified;\n      }\n      \n      return msg;\n    }\n    \n    static showErrorAsDialog(err: any, modalService: BsModalService): BsModalRef {\n      \n      if (err instanceof HttpErrorResponse && err.status == 401)\n      {\n        return null;\n      }\n      \n      let bsModalRef = modalService.show(ErrorModalComponent, { backdrop: true });\n      \n      bsModalRef.content.message = ErrorHandler.getMessageFromError(err);\n      \n      return bsModalRef;\n      \n    }\n}\n","import { ErrorHandler } from './error-handler/error-handler';\nimport { UasdmHeaderComponent } from './header/header.component';\nimport { LoadingBarComponent } from './loading-bar/loading-bar.component';\nimport { LocalizeComponent } from './localize/localize.component';\nimport { BasicConfirmModalComponent } from './modal/basic-confirm-modal.component';\nimport { ErrorModalComponent } from './modal/error-modal.component';\nimport { NotificationModalComponent } from './modal/notification-modal.component';\nimport { PasswordStrengthBarComponent } from './password-strength-bar/password-strength-bar.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nexport const components: any[] = [\n\tErrorHandler,\n\tUasdmHeaderComponent,\n\tLoadingBarComponent,\n\tLocalizeComponent,\n\tBasicConfirmModalComponent,\n\tErrorModalComponent,\n\tNotificationModalComponent,\n\tPasswordStrengthBarComponent,\n\tProfileComponent\n];\n\nexport * from './error-handler/error-handler';\nexport * from './header/header.component';\nexport * from './loading-bar/loading-bar.component';\nexport * from './localize/localize.component';\nexport * from './modal/notification-modal.component';\nexport * from './modal/error-modal.component';\nexport * from './modal/basic-confirm-modal.component';\nexport * from './password-strength-bar/password-strength-bar.component';\nexport * from './profile/profile.component';\n","import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n// https://github.com/angular/angular/blob/5.0.4/packages/common/src/pipes/date_pipe.ts#L137\n@Pipe({ name: 'idmdate' })\nexport class IdmDatePipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private locale: string) {}\n\n  transform(date: Date | string, format: string = \"MMM dd, yyyy hh:mm:ss\"): string {\n    date = new Date(date);\n    \n    let transformed: string = new DatePipe(this.locale).transform(date, format);\n    \n    transformed = transformed + \" \" + this.getTimezoneName();\n    \n    return transformed;\n  }\n  \n  // https://stackoverflow.com/questions/9772955/how-can-i-get-the-timezone-name-in-javascript\n  private getTimezoneName() {\n    const today = new Date();\n    const short = today.toLocaleDateString(undefined);\n    const full = today.toLocaleDateString(undefined, { timeZoneName: 'short' });\n  \n    // Trying to remove date from the string in a locale-agnostic way\n    const shortIndex = full.indexOf(short);\n    if (shortIndex >= 0) {\n      const trimmed = full.substring(0, shortIndex) + full.substring(shortIndex + short.length);\n      \n      // by this time `trimmed` should be the timezone's name with some punctuation -\n      // trim it from both sides\n      return trimmed.replace(/^[\\s,.\\-:;]+|[\\s,.\\-:;]+$/g, '');\n  \n    } else {\n      // in some magic case when short representation of date is not present in the long one\n      return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n  }\n}","import {Pipe, PipeTransform} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n \n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n \n  constructor(private sanitizer: DomSanitizer) {\n  }\n \n  transform(value: any, args?: any): any {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n  }\n \n}","import { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\nimport { Directive } from '@angular/core';\nimport { PhoneNumberUtil } from 'google-libphonenumber';\n\n@Directive({\n\tselector: '[phoneNumber]',\n\tproviders: [{\n\t\tprovide: NG_VALIDATORS,\n\t\tuseExisting: PhoneNumberValidatorDirective,\n\t\tmulti: true\n\t}]\n})\nexport class PhoneNumberValidatorDirective implements Validator {\n\n\tvalidate(control: AbstractControl): { [key: string]: any } | null {\n\t\tif (control.value != null && control.value !== '') {\n\t\t\ttry {\n\t\t\t\tconst phoneUtil = PhoneNumberUtil.getInstance();\n\t\t\t\tconst phoneNumber = '' + control.value + '';\n\t\t\t\tconst pNumber = phoneUtil.parseAndKeepRawInput(phoneNumber, 'US');\n\t\t\t\tconst isValidNumber = phoneUtil.isValidNumber(pNumber);\n\n\t\t\t\tif (isValidNumber) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e, control.value);\n\t\t\t\treturn {\n\t\t\t\t\tphoneNumber: true\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tphoneNumber: true\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keys',\n  pure: false\n})\nexport class KeysPipe implements PipeTransform {\n  transform(value:any, args:string[]) : any {\n    let keys = new Array<any>();\n    for (let key in value) {\n      keys.push({key: key, value: value[key]});\n    }\n    return keys;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({name: 'filter'})\nexport class FilterPipe implements PipeTransform {\n    transform(items: any[], prop: string,  value: string): any[] {  \n      if (!items) return [];        \n      \n      return items.filter(it => it[prop] === value);\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { Progress } from '../model/progress';\n\nexport interface IProgressListener {\n  start(): void;\n  progress(progress:Progress):void;  \n  complete(): void;\n}\n\n@Injectable()\nexport class ProgressService {\n  private listeners: IProgressListener[] = [];\n  \n  public constructor() {}\n  \n  public registerListener(listener: IProgressListener): void {\n   this.listeners.push(listener);\n  }\n  \n  public deregisterListener(listener: IProgressListener): boolean {\n    let indexOfItem = this.listeners.indexOf(listener);\n\n    if (indexOfItem === -1) {\n      return false;\n    }\n\n    this.listeners.splice(indexOfItem, 1);\n\n    return true;\n  }\n  \n  public start(): void {\n    for (const listener of this.listeners) {\n      listener.start();\n    }\n  }\n  \n  public progress(progress:Progress):void {\n    for (const listener of this.listeners) {\n      listener.progress(progress);\n    }\t  \n  }  \n  \n  public complete(): void {\n    for (const listener of this.listeners) {\n      listener.complete();\n    }\n  }  \n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\n\nimport { UasdmHeaderComponent } from './component/header/header.component';\nimport { LocalizeComponent } from './component/localize/localize.component';\nimport { LoadingBarComponent } from './component/loading-bar/loading-bar.component';\nimport { BooleanFieldComponent } from './component/boolean-field/boolean-field.component';\nimport { ProfileComponent } from './component/profile/profile.component';\nimport { ErrorModalComponent } from './component/modal/error-modal.component';\nimport { BasicConfirmModalComponent } from './component/modal/basic-confirm-modal.component';\nimport { NotificationModalComponent } from './component/modal/notification-modal.component';\nimport { ModalStepIndicatorComponent } from './modal/step-indicator/modal-step-indicator.component';\nimport { PasswordStrengthBarComponent } from './component/password-strength-bar/password-strength-bar.component';\n\nimport { LocalizePipe } from './pipe/localize.pipe';\nimport { KeysPipe } from './pipe/keys.pipe';\nimport { PhonePipe } from './pipe/phone.pipe';\nimport { FilterPipe } from './pipe/filter.pipe';\nimport { SafeHtmlPipe } from './pipe/safe-html.pipe';\nimport { IdmDatePipe } from './pipe/idmdate.pipe';\n\nimport { MustMatchDirective } from './directive/must-match.directive';\nimport { PhoneNumberValidatorDirective } from './directive/phone-number.directive'; \nimport { PasswordValidatorDirective } from './directive/password-validator.directive';\n\nimport { DateService } from './service/date.service';\nimport { ProgressService } from './service/progress.service';\nimport { EventService } from './service/event.service';\nimport { LocalizationService } from './service/localization.service';\nimport { AuthService } from './service/auth.service';\nimport { ProfileService } from './service/profile.service';\nimport { SessionService } from './service/session.service';\nimport { AdminGuardService, AuthGuard } from './service/guard.service';\nimport { HttpBackendClient } from './service/http-backend-client.service';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule,\n\t\tFormsModule,\n\t\tModalModule.forRoot(),\n\t\tAlertModule,\n\t\tBsDropdownModule,\n\t\tTypeaheadModule,\n\t\tAccordionModule,\n\t\tCollapseModule.forRoot()\n\t],\n\tdeclarations: [\n\t\tUasdmHeaderComponent,\n\t\tLoadingBarComponent,\n\t\tProfileComponent,\n\t\tBasicConfirmModalComponent,\n\t\tNotificationModalComponent,\n\t\tErrorModalComponent,\n\t\tLocalizeComponent,\n\t\tBooleanFieldComponent,\n\t\tModalStepIndicatorComponent,\n\t\tPasswordStrengthBarComponent,\n\t\tKeysPipe,\n\t\tLocalizePipe,\n\t\tPhonePipe,\n\t\tFilterPipe,\n\t\tSafeHtmlPipe,\n\t\tIdmDatePipe,\n\t\tMustMatchDirective,\n\t\tPhoneNumberValidatorDirective,\n\t\tPasswordValidatorDirective\n\t],\n\texports: [\n\t\tUasdmHeaderComponent,\n\t\tLoadingBarComponent,\n\t\tBasicConfirmModalComponent,\n\t\tNotificationModalComponent,\n\t\tErrorModalComponent,\n\t\tBooleanFieldComponent,\n\t\tLocalizeComponent,\n\t\tModalStepIndicatorComponent,\n\t\tPasswordStrengthBarComponent,\n\t\tKeysPipe,\n\t\tLocalizePipe,\n\t\tPhonePipe,\n\t\tFilterPipe,\n\t\tSafeHtmlPipe,\n\t\tIdmDatePipe,\n\t\tMustMatchDirective,\n\t\tPhoneNumberValidatorDirective,\n\t\tPasswordValidatorDirective\n\t],\n\tentryComponents: [\n\t\tErrorModalComponent,\n\t\tBasicConfirmModalComponent,\n\t\tNotificationModalComponent,\n\t\tLoadingBarComponent,\n\t\tProfileComponent\n\t]\n})\nexport class SharedModule {\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: SharedModule,\n\t\t\tproviders: [\n\t\t\t\tCookieService,\n\t\t\t\tAuthService,\n\t\t\t\tSessionService,\n\t\t\t\tProfileService,\n\t\t\t\tLocalizationService,\n\t\t\t\tEventService,\n\t\t\t\tProgressService,\n\t\t\t\tDateService,\n\t\t\t\tAdminGuardService,\n\t\t\t\tAuthGuard,\n\t\t\t\tHttpBackendClient\n\t\t\t]\n\t\t};\n\t}\n}","import { Component, Input, ChangeDetectionStrategy, SimpleChanges } from '@angular/core';\n\nimport { Step, StepConfig } from './modal-step-indicator';\n\nimport { \n    fadeInOnEnterAnimation,\n    fadeOutOnLeaveAnimation\n } from 'angular-animations';\n\n// HOW TO USE:\n// Set the component in a template:\n//\n//   <modal-step-indicator [stepConfig]=\"stepConfig\"></modal-step-indicator>\n//\n// Pass a stepConfig object to the compenent as an input param. Example object:\n//\n// this.modalStepConfig = {\"steps\": [\n//      {\"label\":\"Category\", \"active\":true, \"enabled\":false},\n//      {\"label\":\"Final\", \"active\":true, \"enabled\":true}\n// ]};\n\n@Component( { \n    selector: 'modal-step-indicator',\n    templateUrl: './modal-step-indicator.component.html',\n    styleUrls: ['./modal-step-indicator.css'],\n        animations: [\n        fadeInOnEnterAnimation(),\n        fadeOutOnLeaveAnimation() \n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n} )\nexport class ModalStepIndicatorComponent {\n\n    @Input() stepConfig: StepConfig\n\n    constructor( ) { \n\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n\n    }\n\n    ngOnDestroy() {\n\n    }\n\n    setActiveStep(step: Step):void {\n\n    }\n\n    setStepConfig(config: StepConfig):void {\n        this.stepConfig = config;\n    }\n}\n","<div class=\"step-indicator\" >\n    <ul *ngIf=\"stepConfig && stepConfig.steps && stepConfig.steps.length > 0\" class=\"list-inline nav nav-justified\">\n        <li [@fadeInOnEnter] class=\"nav-item\" [ngClass]=\"{'active':step.active, 'enabled':step.enabled}\" *ngFor=\"let step of stepConfig.steps\">{{step.label}}</li>\n    </ul>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { PhoneNumberUtil, PhoneNumberFormat } from 'google-libphonenumber';\n\n\n@Pipe({\n\tname: 'phone'\n})\nexport class PhonePipe implements PipeTransform {\n\n\ttransform(value: any, args?: string): any {\n\t\tconst phoneUtil = PhoneNumberUtil.getInstance();\n\n\t\tif (value != null && value !== '') {\n\t\t\tconst number = phoneUtil.parseAndKeepRawInput(value, 'US');\n\n\t\t\tif (phoneUtil.isValidNumber(number)) {\n\t\t\t\treturn phoneUtil.format(number, PhoneNumberFormat.INTERNATIONAL);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n\n}\n"],"sourceRoot":""}