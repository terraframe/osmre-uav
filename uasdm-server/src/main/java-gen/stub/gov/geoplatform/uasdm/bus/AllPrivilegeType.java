/**
 * Copyright 2020 The Department of Interior
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package gov.geoplatform.uasdm.bus;

/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 *
 * @author Autogenerated by RunwaySDK
 */
@com.runwaysdk.business.ClassSignature(hash = -1872605417)
public enum AllPrivilegeType implements com.runwaysdk.business.BusinessEnumeration
{
  AGENCY(),
  
  OWNER(),
  
  PUBLIC();
  
  public static final java.lang.String CLASS = "gov.geoplatform.uasdm.bus.AllPrivilegeType";
  private gov.geoplatform.uasdm.bus.PrivilegeType enumeration;
  
  private synchronized void loadEnumeration()
  {
    gov.geoplatform.uasdm.bus.PrivilegeType enu = gov.geoplatform.uasdm.bus.PrivilegeType.getEnumeration(this.name());
    setEnumeration(enu);
  }
  
  private synchronized void setEnumeration(gov.geoplatform.uasdm.bus.PrivilegeType enumeration)
  {
    this.enumeration = enumeration;
  }
  
  public java.lang.String getOid()
  {
    loadEnumeration();
    return enumeration.getOid();
  }
  
  public java.lang.String getEnumName()
  {
    loadEnumeration();
    return enumeration.getEnumName();
  }
  
  public java.lang.String getDisplayLabel()
  {
    loadEnumeration();
    return enumeration.getDisplayLabel().getValue(com.runwaysdk.session.Session.getCurrentLocale());
  }
  
  public static AllPrivilegeType get(String oid)
  {
    for (AllPrivilegeType e : AllPrivilegeType.values())
    {
      if (e.getOid().equals(oid))
      {
        return e;
      }
    }
    return null;
  }
  
}
