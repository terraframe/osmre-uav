package gov.geoplatform.uasdm.bus;

@com.runwaysdk.business.ClassSignature(hash = 1914052239)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to SiteHasProjects.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class SiteHasProjectsBase extends gov.geoplatform.uasdm.bus.ComponentHasComponent
{
  public final static String CLASS = "gov.geoplatform.uasdm.bus.SiteHasProjects";
  private static final long serialVersionUID = 1914052239;
  
  public SiteHasProjectsBase(String parentOid, String childOid)
  {
    super(parentOid, childOid);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static SiteHasProjectsQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    SiteHasProjectsQuery query = new SiteHasProjectsQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public gov.geoplatform.uasdm.bus.Site getParent()
  {
    return (gov.geoplatform.uasdm.bus.Site) super.getParent();
  }
  
  public gov.geoplatform.uasdm.bus.Project getChild()
  {
    return (gov.geoplatform.uasdm.bus.Project) super.getChild();
  }
  
  public static SiteHasProjects get(String oid)
  {
    return (SiteHasProjects) com.runwaysdk.business.Relationship.get(oid);
  }
  
  public static SiteHasProjects getByKey(String key)
  {
    return (SiteHasProjects) com.runwaysdk.business.Relationship.get(CLASS, key);
  }
  
  public static SiteHasProjects lock(java.lang.String oid)
  {
    SiteHasProjects _instance = SiteHasProjects.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static SiteHasProjects unlock(java.lang.String oid)
  {
    SiteHasProjects _instance = SiteHasProjects.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
