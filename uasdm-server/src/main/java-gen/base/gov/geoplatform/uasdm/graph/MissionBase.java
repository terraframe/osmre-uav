package gov.geoplatform.uasdm.graph;

@com.runwaysdk.business.ClassSignature(hash = -246354184)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Mission.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MissionBase extends gov.geoplatform.uasdm.graph.UasComponent
{
  public final static String CLASS = "gov.geoplatform.uasdm.graph.Mission";
  private static final long serialVersionUID = -246354184;
  
  public MissionBase()
  {
    super();
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public void addMissionHasCollectionChild(gov.geoplatform.uasdm.graph.Collection collection)
  {
    super.addChild(collection, "gov.geoplatform.uasdm.graph.MissionHasCollection");
  }
  
  public void removeMissionHasCollectionChild(gov.geoplatform.uasdm.graph.Collection collection)
  {
    super.addChild(collection, "gov.geoplatform.uasdm.graph.MissionHasCollection");
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<gov.geoplatform.uasdm.graph.Collection> getMissionHasCollectionChildCollections()
  {
    return super.getChildren("gov.geoplatform.uasdm.graph.MissionHasCollection",gov.geoplatform.uasdm.graph.Collection.class);
  }
  
  public void addProjectHasMissionParent(gov.geoplatform.uasdm.graph.Project project)
  {
    super.addParent(project, "gov.geoplatform.uasdm.graph.ProjectHasMission");
  }
  
  public void removeProjectHasMissionParent(gov.geoplatform.uasdm.graph.Project project)
  {
    super.addParent(project, "gov.geoplatform.uasdm.graph.ProjectHasMission");
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<gov.geoplatform.uasdm.graph.Project> getProjectHasMissionParentProjects()
  {
    return super.getParents("gov.geoplatform.uasdm.graph.ProjectHasMission", gov.geoplatform.uasdm.graph.Project.class);
  }
  
  public static Mission get(String oid)
  {
    return (Mission) com.runwaysdk.business.graph.VertexObject.get(CLASS, oid);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
