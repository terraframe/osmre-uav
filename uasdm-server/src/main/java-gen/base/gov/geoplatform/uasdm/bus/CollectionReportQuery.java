package gov.geoplatform.uasdm.bus;

@com.runwaysdk.business.ClassSignature(hash = -1617817034)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to CollectionReport.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class CollectionReportQuery extends com.runwaysdk.query.GeneratedBusinessQuery

{

  public CollectionReportQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public CollectionReportQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return gov.geoplatform.uasdm.bus.CollectionReport.CLASS;
  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor()
  {
    return getActor(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.ACTOR);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.ACTOR, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.ACTOR);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.ACTOR, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getAllStorageSize()
  {
    return getAllStorageSize(null);

  }
 
  public com.runwaysdk.query.SelectableLong getAllStorageSize(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.ALLSTORAGESIZE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getAllStorageSize(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.ALLSTORAGESIZE, alias, displayLabel);

  }
  public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau()
  {
    return getBureau(null);

  }
 
  public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.BUREAU);

    return (gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.BUREAU, mdAttributeIF, this, alias, null);

  }
 
  public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.BUREAU);

    return (gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.BUREAU, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getBureauName()
  {
    return getBureauName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getBureauName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.BUREAUNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getBureauName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.BUREAUNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getCollection()
  {
    return getCollection(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getCollection(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getCollection(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTION, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCollectionDate()
  {
    return getCollectionDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCollectionDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTIONDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCollectionDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTIONDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCollectionName()
  {
    return getCollectionName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCollectionName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTIONNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCollectionName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTIONNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getDeleteDate()
  {
    return getDeleteDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getDeleteDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.DELETEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getDeleteDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.DELETEDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getDownloadCounts()
  {
    return getDownloadCounts(null);

  }
 
  public com.runwaysdk.query.SelectableLong getDownloadCounts(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.DOWNLOADCOUNTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getDownloadCounts(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.DOWNLOADCOUNTS, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.ENTITYDOMAIN, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.ENTITYDOMAIN, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getErosArchived()
  {
    return getErosArchived(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getErosArchived(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.EROSARCHIVED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getErosArchived(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.EROSARCHIVED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete()
  {
    return getErosMetadataComplete(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.EROSMETADATACOMPLETE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.EROSMETADATACOMPLETE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getExists()
  {
    return getExists(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getExists(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.EXISTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getExists(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.EXISTS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getFaaIdNumber()
  {
    return getFaaIdNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getFaaIdNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.FAAIDNUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getFaaIdNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.FAAIDNUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableGeometry getGeometry()
  {
    return getGeometry(null);

  }
 
  public com.runwaysdk.query.SelectableGeometry getGeometry(String alias)
  {
    return (com.runwaysdk.query.SelectableGeometry)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.GEOMETRY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableGeometry getGeometry(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableGeometry)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.GEOMETRY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getHillshade()
  {
    return getHillshade(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getHillshade(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.HILLSHADE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getHillshade(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.HILLSHADE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.LOCKEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.LOCKEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.LOCKEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.LOCKEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getMission()
  {
    return getMission(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getMission(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.MISSION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getMission(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.MISSION, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getMissionName()
  {
    return getMissionName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getMissionName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.MISSIONNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getMissionName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.MISSIONNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getOdmProcessing()
  {
    return getOdmProcessing(null);

  }
 
  public com.runwaysdk.query.SelectableChar getOdmProcessing(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.ODMPROCESSING, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getOdmProcessing(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.ODMPROCESSING, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.OID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getOrthomosaic()
  {
    return getOrthomosaic(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getOrthomosaic(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.ORTHOMOSAIC, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getOrthomosaic(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.ORTHOMOSAIC, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.OWNER, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(gov.geoplatform.uasdm.bus.CollectionReport.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(gov.geoplatform.uasdm.bus.CollectionReport.OWNER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getPlatform()
  {
    return getPlatform(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getPlatform(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PLATFORM, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getPlatform(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PLATFORM, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getPlatformName()
  {
    return getPlatformName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPlatformName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PLATFORMNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPlatformName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PLATFORMNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPointCloud()
  {
    return getPointCloud(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPointCloud(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.POINTCLOUD, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPointCloud(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.POINTCLOUD, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getProduct()
  {
    return getProduct(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getProduct(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getProduct(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getProductsLink()
  {
    return getProductsLink(null);

  }
 
  public com.runwaysdk.query.SelectableChar getProductsLink(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCTSLINK, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getProductsLink(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCTSLINK, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getProductsShared()
  {
    return getProductsShared(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getProductsShared(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCTSSHARED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getProductsShared(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCTSSHARED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getProject()
  {
    return getProject(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getProject(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PROJECT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getProject(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PROJECT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getProjectName()
  {
    return getProjectName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getProjectName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PROJECTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getProjectName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.PROJECTNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRawImagesCount()
  {
    return getRawImagesCount(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRawImagesCount(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.RAWIMAGESCOUNT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRawImagesCount(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.RAWIMAGESCOUNT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getRawImagesLink()
  {
    return getRawImagesLink(null);

  }
 
  public com.runwaysdk.query.SelectableChar getRawImagesLink(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.RAWIMAGESLINK, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getRawImagesLink(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.RAWIMAGESLINK, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getSensor()
  {
    return getSensor(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getSensor(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SENSOR, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getSensor(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SENSOR, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSensorName()
  {
    return getSensorName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSensorName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SENSORNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSensorName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SENSORNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSerialNumber()
  {
    return getSerialNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSerialNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SERIALNUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSerialNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SERIALNUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getSite()
  {
    return getSite(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getSite(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SITE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getSite(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SITE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteName()
  {
    return getSiteName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SITENAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.SITENAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getUav()
  {
    return getUav(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getUav(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.UAV, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getUav(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.UAV, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUserName()
  {
    return getUserName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUserName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.USERNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUserName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.USERNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getVideo()
  {
    return getVideo(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getVideo(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.VIDEO, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getVideo(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(gov.geoplatform.uasdm.bus.CollectionReport.VIDEO, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.ACTOR)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.BUREAU)) 
    {
       return new gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends CollectionReport> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<CollectionReport>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface CollectionReportQueryReferenceIF extends com.runwaysdk.query.SelectableReference
  {

    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getAllStorageSize();
    public com.runwaysdk.query.SelectableLong getAllStorageSize(String alias);
    public com.runwaysdk.query.SelectableLong getAllStorageSize(String alias, String displayLabel);
    public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau();
    public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau(String alias);
    public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getBureauName();
    public com.runwaysdk.query.SelectableChar getBureauName(String alias);
    public com.runwaysdk.query.SelectableChar getBureauName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getCollection();
    public com.runwaysdk.query.SelectableUUID getCollection(String alias);
    public com.runwaysdk.query.SelectableUUID getCollection(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCollectionDate();
    public com.runwaysdk.query.SelectableMoment getCollectionDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCollectionDate(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getCollectionName();
    public com.runwaysdk.query.SelectableChar getCollectionName(String alias);
    public com.runwaysdk.query.SelectableChar getCollectionName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getDeleteDate();
    public com.runwaysdk.query.SelectableMoment getDeleteDate(String alias);
    public com.runwaysdk.query.SelectableMoment getDeleteDate(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getDownloadCounts();
    public com.runwaysdk.query.SelectableLong getDownloadCounts(String alias);
    public com.runwaysdk.query.SelectableLong getDownloadCounts(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getErosArchived();
    public com.runwaysdk.query.SelectableBoolean getErosArchived(String alias);
    public com.runwaysdk.query.SelectableBoolean getErosArchived(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete();
    public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete(String alias);
    public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getExists();
    public com.runwaysdk.query.SelectableBoolean getExists(String alias);
    public com.runwaysdk.query.SelectableBoolean getExists(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getFaaIdNumber();
    public com.runwaysdk.query.SelectableChar getFaaIdNumber(String alias);
    public com.runwaysdk.query.SelectableChar getFaaIdNumber(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableGeometry getGeometry();
    public com.runwaysdk.query.SelectableGeometry getGeometry(String alias);
    public com.runwaysdk.query.SelectableGeometry getGeometry(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getHillshade();
    public com.runwaysdk.query.SelectableBoolean getHillshade(String alias);
    public com.runwaysdk.query.SelectableBoolean getHillshade(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getMission();
    public com.runwaysdk.query.SelectableUUID getMission(String alias);
    public com.runwaysdk.query.SelectableUUID getMission(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getMissionName();
    public com.runwaysdk.query.SelectableChar getMissionName(String alias);
    public com.runwaysdk.query.SelectableChar getMissionName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getOdmProcessing();
    public com.runwaysdk.query.SelectableChar getOdmProcessing(String alias);
    public com.runwaysdk.query.SelectableChar getOdmProcessing(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getOid();
    public com.runwaysdk.query.SelectableUUID getOid(String alias);
    public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getOrthomosaic();
    public com.runwaysdk.query.SelectableBoolean getOrthomosaic(String alias);
    public com.runwaysdk.query.SelectableBoolean getOrthomosaic(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getPlatform();
    public com.runwaysdk.query.SelectableUUID getPlatform(String alias);
    public com.runwaysdk.query.SelectableUUID getPlatform(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getPlatformName();
    public com.runwaysdk.query.SelectableChar getPlatformName(String alias);
    public com.runwaysdk.query.SelectableChar getPlatformName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getPointCloud();
    public com.runwaysdk.query.SelectableBoolean getPointCloud(String alias);
    public com.runwaysdk.query.SelectableBoolean getPointCloud(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getProduct();
    public com.runwaysdk.query.SelectableUUID getProduct(String alias);
    public com.runwaysdk.query.SelectableUUID getProduct(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getProductsLink();
    public com.runwaysdk.query.SelectableChar getProductsLink(String alias);
    public com.runwaysdk.query.SelectableChar getProductsLink(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getProductsShared();
    public com.runwaysdk.query.SelectableBoolean getProductsShared(String alias);
    public com.runwaysdk.query.SelectableBoolean getProductsShared(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getProject();
    public com.runwaysdk.query.SelectableUUID getProject(String alias);
    public com.runwaysdk.query.SelectableUUID getProject(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getProjectName();
    public com.runwaysdk.query.SelectableChar getProjectName(String alias);
    public com.runwaysdk.query.SelectableChar getProjectName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRawImagesCount();
    public com.runwaysdk.query.SelectableInteger getRawImagesCount(String alias);
    public com.runwaysdk.query.SelectableInteger getRawImagesCount(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getRawImagesLink();
    public com.runwaysdk.query.SelectableChar getRawImagesLink(String alias);
    public com.runwaysdk.query.SelectableChar getRawImagesLink(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getSensor();
    public com.runwaysdk.query.SelectableUUID getSensor(String alias);
    public com.runwaysdk.query.SelectableUUID getSensor(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSensorName();
    public com.runwaysdk.query.SelectableChar getSensorName(String alias);
    public com.runwaysdk.query.SelectableChar getSensorName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSerialNumber();
    public com.runwaysdk.query.SelectableChar getSerialNumber(String alias);
    public com.runwaysdk.query.SelectableChar getSerialNumber(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getSite();
    public com.runwaysdk.query.SelectableUUID getSite(String alias);
    public com.runwaysdk.query.SelectableUUID getSite(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteName();
    public com.runwaysdk.query.SelectableChar getSiteName(String alias);
    public com.runwaysdk.query.SelectableChar getSiteName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getUav();
    public com.runwaysdk.query.SelectableUUID getUav(String alias);
    public com.runwaysdk.query.SelectableUUID getUav(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getUserName();
    public com.runwaysdk.query.SelectableChar getUserName(String alias);
    public com.runwaysdk.query.SelectableChar getUserName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getVideo();
    public com.runwaysdk.query.SelectableBoolean getVideo(String alias);
    public com.runwaysdk.query.SelectableBoolean getVideo(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(gov.geoplatform.uasdm.bus.CollectionReport collectionReport);

    public com.runwaysdk.query.BasicCondition NE(gov.geoplatform.uasdm.bus.CollectionReport collectionReport);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class CollectionReportQueryReference extends com.runwaysdk.query.AttributeReference
 implements CollectionReportQueryReferenceIF

  {

  public CollectionReportQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(gov.geoplatform.uasdm.bus.CollectionReport collectionReport)
    {
      if(collectionReport == null) return this.EQ((java.lang.String)null);
      return this.EQ(collectionReport.getOid());
    }

    public com.runwaysdk.query.BasicCondition NE(gov.geoplatform.uasdm.bus.CollectionReport collectionReport)
    {
      if(collectionReport == null) return this.NE((java.lang.String)null);
      return this.NE(collectionReport.getOid());
    }

  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor()
  {
    return getActor(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ACTOR, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ACTOR,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getAllStorageSize()
  {
    return getAllStorageSize(null);

  }
 
  public com.runwaysdk.query.SelectableLong getAllStorageSize(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ALLSTORAGESIZE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getAllStorageSize(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ALLSTORAGESIZE, alias, displayLabel);

  }
  public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau()
  {
    return getBureau(null);

  }
 
  public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau(String alias)
  {
    return (gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.BUREAU, alias, null);

  }
 
  public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau(String alias, String displayLabel)
  {
    return (gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.BUREAU,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getBureauName()
  {
    return getBureauName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getBureauName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.BUREAUNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getBureauName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.BUREAUNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getCollection()
  {
    return getCollection(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getCollection(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getCollection(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTION, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCollectionDate()
  {
    return getCollectionDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCollectionDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTIONDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCollectionDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTIONDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCollectionName()
  {
    return getCollectionName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCollectionName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTIONNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCollectionName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTIONNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getDeleteDate()
  {
    return getDeleteDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getDeleteDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.DELETEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getDeleteDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.DELETEDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getDownloadCounts()
  {
    return getDownloadCounts(null);

  }
 
  public com.runwaysdk.query.SelectableLong getDownloadCounts(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(gov.geoplatform.uasdm.bus.CollectionReport.DOWNLOADCOUNTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getDownloadCounts(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(gov.geoplatform.uasdm.bus.CollectionReport.DOWNLOADCOUNTS, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ENTITYDOMAIN,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getErosArchived()
  {
    return getErosArchived(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getErosArchived(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.EROSARCHIVED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getErosArchived(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.EROSARCHIVED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete()
  {
    return getErosMetadataComplete(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.EROSMETADATACOMPLETE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.EROSMETADATACOMPLETE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getExists()
  {
    return getExists(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getExists(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.EXISTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getExists(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.EXISTS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getFaaIdNumber()
  {
    return getFaaIdNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getFaaIdNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.FAAIDNUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getFaaIdNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.FAAIDNUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableGeometry getGeometry()
  {
    return getGeometry(null);

  }
 
  public com.runwaysdk.query.SelectableGeometry getGeometry(String alias)
  {
    return (com.runwaysdk.query.SelectableGeometry)this.get(gov.geoplatform.uasdm.bus.CollectionReport.GEOMETRY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableGeometry getGeometry(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableGeometry)this.get(gov.geoplatform.uasdm.bus.CollectionReport.GEOMETRY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getHillshade()
  {
    return getHillshade(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getHillshade(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.HILLSHADE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getHillshade(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.HILLSHADE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getMission()
  {
    return getMission(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getMission(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.MISSION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getMission(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.MISSION, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getMissionName()
  {
    return getMissionName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getMissionName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.MISSIONNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getMissionName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.MISSIONNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getOdmProcessing()
  {
    return getOdmProcessing(null);

  }
 
  public com.runwaysdk.query.SelectableChar getOdmProcessing(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ODMPROCESSING, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getOdmProcessing(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ODMPROCESSING, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.OID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getOrthomosaic()
  {
    return getOrthomosaic(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getOrthomosaic(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ORTHOMOSAIC, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getOrthomosaic(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ORTHOMOSAIC, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getPlatform()
  {
    return getPlatform(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getPlatform(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PLATFORM, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getPlatform(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PLATFORM, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getPlatformName()
  {
    return getPlatformName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPlatformName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PLATFORMNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPlatformName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PLATFORMNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPointCloud()
  {
    return getPointCloud(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPointCloud(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.POINTCLOUD, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPointCloud(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.POINTCLOUD, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getProduct()
  {
    return getProduct(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getProduct(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getProduct(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getProductsLink()
  {
    return getProductsLink(null);

  }
 
  public com.runwaysdk.query.SelectableChar getProductsLink(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCTSLINK, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getProductsLink(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCTSLINK, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getProductsShared()
  {
    return getProductsShared(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getProductsShared(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCTSSHARED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getProductsShared(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCTSSHARED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getProject()
  {
    return getProject(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getProject(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PROJECT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getProject(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PROJECT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getProjectName()
  {
    return getProjectName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getProjectName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PROJECTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getProjectName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PROJECTNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRawImagesCount()
  {
    return getRawImagesCount(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRawImagesCount(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(gov.geoplatform.uasdm.bus.CollectionReport.RAWIMAGESCOUNT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRawImagesCount(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(gov.geoplatform.uasdm.bus.CollectionReport.RAWIMAGESCOUNT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getRawImagesLink()
  {
    return getRawImagesLink(null);

  }
 
  public com.runwaysdk.query.SelectableChar getRawImagesLink(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.RAWIMAGESLINK, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getRawImagesLink(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.RAWIMAGESLINK, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getSensor()
  {
    return getSensor(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getSensor(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SENSOR, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getSensor(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SENSOR, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSensorName()
  {
    return getSensorName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSensorName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SENSORNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSensorName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SENSORNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSerialNumber()
  {
    return getSerialNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSerialNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SERIALNUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSerialNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SERIALNUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getSite()
  {
    return getSite(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getSite(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SITE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getSite(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SITE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteName()
  {
    return getSiteName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SITENAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SITENAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getUav()
  {
    return getUav(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getUav(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.UAV, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getUav(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.UAV, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUserName()
  {
    return getUserName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUserName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.USERNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUserName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.USERNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getVideo()
  {
    return getVideo(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getVideo(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.VIDEO, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getVideo(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.VIDEO, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.ACTOR)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.BUREAU)) 
    {
       return new gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface CollectionReportQueryMultiReferenceIF extends com.runwaysdk.query.SelectableMultiReference
  {

    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getAllStorageSize();
    public com.runwaysdk.query.SelectableLong getAllStorageSize(String alias);
    public com.runwaysdk.query.SelectableLong getAllStorageSize(String alias, String displayLabel);
    public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau();
    public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau(String alias);
    public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getBureauName();
    public com.runwaysdk.query.SelectableChar getBureauName(String alias);
    public com.runwaysdk.query.SelectableChar getBureauName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getCollection();
    public com.runwaysdk.query.SelectableUUID getCollection(String alias);
    public com.runwaysdk.query.SelectableUUID getCollection(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCollectionDate();
    public com.runwaysdk.query.SelectableMoment getCollectionDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCollectionDate(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getCollectionName();
    public com.runwaysdk.query.SelectableChar getCollectionName(String alias);
    public com.runwaysdk.query.SelectableChar getCollectionName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getDeleteDate();
    public com.runwaysdk.query.SelectableMoment getDeleteDate(String alias);
    public com.runwaysdk.query.SelectableMoment getDeleteDate(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getDownloadCounts();
    public com.runwaysdk.query.SelectableLong getDownloadCounts(String alias);
    public com.runwaysdk.query.SelectableLong getDownloadCounts(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getErosArchived();
    public com.runwaysdk.query.SelectableBoolean getErosArchived(String alias);
    public com.runwaysdk.query.SelectableBoolean getErosArchived(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete();
    public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete(String alias);
    public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getExists();
    public com.runwaysdk.query.SelectableBoolean getExists(String alias);
    public com.runwaysdk.query.SelectableBoolean getExists(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getFaaIdNumber();
    public com.runwaysdk.query.SelectableChar getFaaIdNumber(String alias);
    public com.runwaysdk.query.SelectableChar getFaaIdNumber(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableGeometry getGeometry();
    public com.runwaysdk.query.SelectableGeometry getGeometry(String alias);
    public com.runwaysdk.query.SelectableGeometry getGeometry(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getHillshade();
    public com.runwaysdk.query.SelectableBoolean getHillshade(String alias);
    public com.runwaysdk.query.SelectableBoolean getHillshade(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getMission();
    public com.runwaysdk.query.SelectableUUID getMission(String alias);
    public com.runwaysdk.query.SelectableUUID getMission(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getMissionName();
    public com.runwaysdk.query.SelectableChar getMissionName(String alias);
    public com.runwaysdk.query.SelectableChar getMissionName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getOdmProcessing();
    public com.runwaysdk.query.SelectableChar getOdmProcessing(String alias);
    public com.runwaysdk.query.SelectableChar getOdmProcessing(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getOid();
    public com.runwaysdk.query.SelectableUUID getOid(String alias);
    public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getOrthomosaic();
    public com.runwaysdk.query.SelectableBoolean getOrthomosaic(String alias);
    public com.runwaysdk.query.SelectableBoolean getOrthomosaic(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getPlatform();
    public com.runwaysdk.query.SelectableUUID getPlatform(String alias);
    public com.runwaysdk.query.SelectableUUID getPlatform(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getPlatformName();
    public com.runwaysdk.query.SelectableChar getPlatformName(String alias);
    public com.runwaysdk.query.SelectableChar getPlatformName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getPointCloud();
    public com.runwaysdk.query.SelectableBoolean getPointCloud(String alias);
    public com.runwaysdk.query.SelectableBoolean getPointCloud(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getProduct();
    public com.runwaysdk.query.SelectableUUID getProduct(String alias);
    public com.runwaysdk.query.SelectableUUID getProduct(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getProductsLink();
    public com.runwaysdk.query.SelectableChar getProductsLink(String alias);
    public com.runwaysdk.query.SelectableChar getProductsLink(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getProductsShared();
    public com.runwaysdk.query.SelectableBoolean getProductsShared(String alias);
    public com.runwaysdk.query.SelectableBoolean getProductsShared(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getProject();
    public com.runwaysdk.query.SelectableUUID getProject(String alias);
    public com.runwaysdk.query.SelectableUUID getProject(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getProjectName();
    public com.runwaysdk.query.SelectableChar getProjectName(String alias);
    public com.runwaysdk.query.SelectableChar getProjectName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRawImagesCount();
    public com.runwaysdk.query.SelectableInteger getRawImagesCount(String alias);
    public com.runwaysdk.query.SelectableInteger getRawImagesCount(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getRawImagesLink();
    public com.runwaysdk.query.SelectableChar getRawImagesLink(String alias);
    public com.runwaysdk.query.SelectableChar getRawImagesLink(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getSensor();
    public com.runwaysdk.query.SelectableUUID getSensor(String alias);
    public com.runwaysdk.query.SelectableUUID getSensor(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSensorName();
    public com.runwaysdk.query.SelectableChar getSensorName(String alias);
    public com.runwaysdk.query.SelectableChar getSensorName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSerialNumber();
    public com.runwaysdk.query.SelectableChar getSerialNumber(String alias);
    public com.runwaysdk.query.SelectableChar getSerialNumber(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getSite();
    public com.runwaysdk.query.SelectableUUID getSite(String alias);
    public com.runwaysdk.query.SelectableUUID getSite(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteName();
    public com.runwaysdk.query.SelectableChar getSiteName(String alias);
    public com.runwaysdk.query.SelectableChar getSiteName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getUav();
    public com.runwaysdk.query.SelectableUUID getUav(String alias);
    public com.runwaysdk.query.SelectableUUID getUav(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getUserName();
    public com.runwaysdk.query.SelectableChar getUserName(String alias);
    public com.runwaysdk.query.SelectableChar getUserName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getVideo();
    public com.runwaysdk.query.SelectableBoolean getVideo(String alias);
    public com.runwaysdk.query.SelectableBoolean getVideo(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(gov.geoplatform.uasdm.bus.CollectionReport ... collectionReport);
    public com.runwaysdk.query.Condition notContainsAny(gov.geoplatform.uasdm.bus.CollectionReport ... collectionReport);
    public com.runwaysdk.query.Condition containsAll(gov.geoplatform.uasdm.bus.CollectionReport ... collectionReport);
    public com.runwaysdk.query.Condition notContainsAll(gov.geoplatform.uasdm.bus.CollectionReport ... collectionReport);
    public com.runwaysdk.query.Condition containsExactly(gov.geoplatform.uasdm.bus.CollectionReport ... collectionReport);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class CollectionReportQueryMultiReference extends com.runwaysdk.query.AttributeMultiReference
 implements CollectionReportQueryMultiReferenceIF

  {

  public CollectionReportQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(gov.geoplatform.uasdm.bus.CollectionReport ... collectionReport)  {

      String[] itemIdArray = new String[collectionReport.length]; 

      for (int i=0; i<collectionReport.length; i++)
      {
        itemIdArray[i] = collectionReport[i].getOid();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(gov.geoplatform.uasdm.bus.CollectionReport ... collectionReport)  {

      String[] itemIdArray = new String[collectionReport.length]; 

      for (int i=0; i<collectionReport.length; i++)
      {
        itemIdArray[i] = collectionReport[i].getOid();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(gov.geoplatform.uasdm.bus.CollectionReport ... collectionReport)  {

      String[] itemIdArray = new String[collectionReport.length]; 

      for (int i=0; i<collectionReport.length; i++)
      {
        itemIdArray[i] = collectionReport[i].getOid();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(gov.geoplatform.uasdm.bus.CollectionReport ... collectionReport)  {

      String[] itemIdArray = new String[collectionReport.length]; 

      for (int i=0; i<collectionReport.length; i++)
      {
        itemIdArray[i] = collectionReport[i].getOid();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(gov.geoplatform.uasdm.bus.CollectionReport ... collectionReport)  {

      String[] itemIdArray = new String[collectionReport.length]; 

      for (int i=0; i<collectionReport.length; i++)
      {
        itemIdArray[i] = collectionReport[i].getOid();
      }

      return this.containsExactly(itemIdArray);
  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor()
  {
    return getActor(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ACTOR, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getActor(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ACTOR,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getAllStorageSize()
  {
    return getAllStorageSize(null);

  }
 
  public com.runwaysdk.query.SelectableLong getAllStorageSize(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ALLSTORAGESIZE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getAllStorageSize(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ALLSTORAGESIZE, alias, displayLabel);

  }
  public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau()
  {
    return getBureau(null);

  }
 
  public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau(String alias)
  {
    return (gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.BUREAU, alias, null);

  }
 
  public gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF getBureau(String alias, String displayLabel)
  {
    return (gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.BUREAU,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getBureauName()
  {
    return getBureauName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getBureauName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.BUREAUNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getBureauName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.BUREAUNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getCollection()
  {
    return getCollection(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getCollection(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getCollection(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTION, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCollectionDate()
  {
    return getCollectionDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCollectionDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTIONDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCollectionDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTIONDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCollectionName()
  {
    return getCollectionName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCollectionName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTIONNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCollectionName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.COLLECTIONNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getDeleteDate()
  {
    return getDeleteDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getDeleteDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.DELETEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getDeleteDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.DELETEDATE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getDownloadCounts()
  {
    return getDownloadCounts(null);

  }
 
  public com.runwaysdk.query.SelectableLong getDownloadCounts(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(gov.geoplatform.uasdm.bus.CollectionReport.DOWNLOADCOUNTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getDownloadCounts(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(gov.geoplatform.uasdm.bus.CollectionReport.DOWNLOADCOUNTS, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ENTITYDOMAIN,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getErosArchived()
  {
    return getErosArchived(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getErosArchived(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.EROSARCHIVED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getErosArchived(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.EROSARCHIVED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete()
  {
    return getErosMetadataComplete(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.EROSMETADATACOMPLETE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getErosMetadataComplete(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.EROSMETADATACOMPLETE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getExists()
  {
    return getExists(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getExists(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.EXISTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getExists(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.EXISTS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getFaaIdNumber()
  {
    return getFaaIdNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getFaaIdNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.FAAIDNUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getFaaIdNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.FAAIDNUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableGeometry getGeometry()
  {
    return getGeometry(null);

  }
 
  public com.runwaysdk.query.SelectableGeometry getGeometry(String alias)
  {
    return (com.runwaysdk.query.SelectableGeometry)this.get(gov.geoplatform.uasdm.bus.CollectionReport.GEOMETRY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableGeometry getGeometry(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableGeometry)this.get(gov.geoplatform.uasdm.bus.CollectionReport.GEOMETRY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getHillshade()
  {
    return getHillshade(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getHillshade(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.HILLSHADE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getHillshade(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.HILLSHADE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getMission()
  {
    return getMission(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getMission(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.MISSION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getMission(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.MISSION, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getMissionName()
  {
    return getMissionName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getMissionName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.MISSIONNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getMissionName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.MISSIONNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getOdmProcessing()
  {
    return getOdmProcessing(null);

  }
 
  public com.runwaysdk.query.SelectableChar getOdmProcessing(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ODMPROCESSING, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getOdmProcessing(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ODMPROCESSING, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.OID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getOrthomosaic()
  {
    return getOrthomosaic(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getOrthomosaic(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ORTHOMOSAIC, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getOrthomosaic(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.ORTHOMOSAIC, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(gov.geoplatform.uasdm.bus.CollectionReport.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getPlatform()
  {
    return getPlatform(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getPlatform(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PLATFORM, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getPlatform(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PLATFORM, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getPlatformName()
  {
    return getPlatformName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPlatformName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PLATFORMNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPlatformName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PLATFORMNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPointCloud()
  {
    return getPointCloud(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPointCloud(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.POINTCLOUD, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPointCloud(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.POINTCLOUD, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getProduct()
  {
    return getProduct(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getProduct(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getProduct(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getProductsLink()
  {
    return getProductsLink(null);

  }
 
  public com.runwaysdk.query.SelectableChar getProductsLink(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCTSLINK, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getProductsLink(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCTSLINK, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getProductsShared()
  {
    return getProductsShared(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getProductsShared(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCTSSHARED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getProductsShared(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PRODUCTSSHARED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getProject()
  {
    return getProject(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getProject(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PROJECT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getProject(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PROJECT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getProjectName()
  {
    return getProjectName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getProjectName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PROJECTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getProjectName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.PROJECTNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRawImagesCount()
  {
    return getRawImagesCount(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRawImagesCount(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(gov.geoplatform.uasdm.bus.CollectionReport.RAWIMAGESCOUNT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRawImagesCount(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(gov.geoplatform.uasdm.bus.CollectionReport.RAWIMAGESCOUNT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getRawImagesLink()
  {
    return getRawImagesLink(null);

  }
 
  public com.runwaysdk.query.SelectableChar getRawImagesLink(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.RAWIMAGESLINK, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getRawImagesLink(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.RAWIMAGESLINK, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getSensor()
  {
    return getSensor(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getSensor(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SENSOR, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getSensor(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SENSOR, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSensorName()
  {
    return getSensorName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSensorName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SENSORNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSensorName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SENSORNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSerialNumber()
  {
    return getSerialNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSerialNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SERIALNUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSerialNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SERIALNUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getSite()
  {
    return getSite(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getSite(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SITE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getSite(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SITE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteName()
  {
    return getSiteName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SITENAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.SITENAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getUav()
  {
    return getUav(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getUav(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.UAV, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getUav(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(gov.geoplatform.uasdm.bus.CollectionReport.UAV, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUserName()
  {
    return getUserName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUserName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.USERNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUserName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(gov.geoplatform.uasdm.bus.CollectionReport.USERNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getVideo()
  {
    return getVideo(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getVideo(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.VIDEO, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getVideo(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(gov.geoplatform.uasdm.bus.CollectionReport.VIDEO, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.ACTOR)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.BUREAU)) 
    {
       return new gov.geoplatform.uasdm.bus.BureauQuery.BureauQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(gov.geoplatform.uasdm.bus.CollectionReport.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }
}
