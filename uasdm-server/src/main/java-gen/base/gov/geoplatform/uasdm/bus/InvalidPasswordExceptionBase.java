package gov.geoplatform.uasdm.bus;

@com.runwaysdk.business.ClassSignature(hash = -628525349)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to InvalidPasswordException.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class InvalidPasswordExceptionBase extends com.runwaysdk.business.SmartException
{
  public final static String CLASS = "gov.geoplatform.uasdm.bus.InvalidPasswordException";
  public static java.lang.String OID = "oid";
  private static final long serialVersionUID = -628525349;
  
  public InvalidPasswordExceptionBase()
  {
    super();
  }
  
  public InvalidPasswordExceptionBase(java.lang.String developerMessage)
  {
    super(developerMessage);
  }
  
  public InvalidPasswordExceptionBase(java.lang.String developerMessage, java.lang.Throwable cause)
  {
    super(developerMessage, cause);
  }
  
  public InvalidPasswordExceptionBase(java.lang.Throwable cause)
  {
    super(cause);
  }
  
  public String getOid()
  {
    return getValue(OID);
  }
  
  public void validateOid()
  {
    this.validateAttribute(OID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF getOidMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(gov.geoplatform.uasdm.bus.InvalidPasswordException.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF)mdClassIF.definesAttribute(OID);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public java.lang.String localize(java.util.Locale locale)
  {
    java.lang.String message = super.localize(locale);
    message = replace(message, "{oid}", this.getOid());
    return message;
  }
  
}
