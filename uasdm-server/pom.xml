<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>gov.osmre.uasdm</groupId>
		<artifactId>uasdm</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>uasdm-server</artifactId>
	<packaging>jar</packaging>

	<name>UASDM Server</name>
	<description>The back-end database server for the uasdm project</description>

	<properties>
		<!-- Specify your development root database credentials here. -->
		<root.db>postgres</root.db>
		<root.user>postgres</root.user>
		<root.pass>postgres</root.pass>
	</properties>


	<dependencies>
		<dependency>
			<groupId>net.geoprism</groupId>
			<artifactId>geoprism-server</artifactId>
			<version>${geoprism.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>org.apache.batik.pdf</artifactId>
					<groupId>org.eclipse.birt.runtime.3_7_1</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.geoprism</groupId>
			<artifactId>geoprism-client</artifactId>
			<version>${geoprism.version}</version>
		</dependency>
		<dependency>
			<groupId>net.geoprism</groupId>
			<artifactId>geoprism-common</artifactId>
			<version>${geoprism.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.18</version>
		</dependency>
	</dependencies>

	<!-- These profiles allow for Maven execution of Runway-SDK's Java Tools, 
		like rebuilding the database and importing schemas. -->
	<profiles>
		<profile>
			<id>new-schema</id>
			<activation>
				<property>
					<name>new-schema</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>new-schema</id>
								<phase>process-resources</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<executable>java</executable>
									<mainClass>com.runwaysdk.dataaccess.io.CreateDomainModel</mainClass>
									<arguments>
										<argument>${project.basedir}/src/main/working</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>unimport-working</id>
			<activation>
				<property>
					<name>unimport-working</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>unimport-working</id>
								<phase>verify</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<executable>java</executable>
									<mainClass>com.runwaysdk.dataaccess.io.UndoAll</mainClass>
									<arguments>
										<argument>${project.basedir}/src/main/working</argument>
										<argument></argument>
										<argument>false</argument>
									</arguments>
									<systemProperties>
										<systemProperty>
											<key>server.root</key>
											<value>${project.basedir}</value>
										</systemProperty>
										<systemProperty>
											<key>client.root</key>
											<value>${project.basedir}/../uasdm-client</value>
										</systemProperty>
										<systemProperty>
											<key>common.root</key>
											<value>${project.basedir}/../uasdm-common</value>
										</systemProperty>
										<systemProperty>
											<key>jsp.dir</key>
											<value>uasdm-web/src/main/webapp/WEB-INF</value>
										</systemProperty>
										<systemProperty>
											<key>server.classpath.append</key>
											<value>../geoprism/geoprism-common/target/classes;../geoprism/geoprism-server/target/classes</value>
										</systemProperty>
										<systemProperty>
											<key>client.classpath.append</key>
											<value>../geoprism/geoprism-common/target/classes;../geoprism/geoprism-client/target/classes</value>
										</systemProperty>
									</systemProperties>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>import-working</id>
			<activation>
				<property>
					<name>import-working</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>import-working</id>
								<phase>verify</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<executable>java</executable>
									<mainClass>net.geoprism.ImportSchema</mainClass>
									<arguments>
										<argument>${project.basedir}/src/main/working</argument>
										<argument></argument>
										<argument>false</argument>
									</arguments>
									<systemProperties>
										<systemProperty>
											<key>server.root</key>
											<value>uasdm-server</value>
										</systemProperty>
										<systemProperty>
											<key>client.root</key>
											<value>uasdm-client</value>
										</systemProperty>
										<systemProperty>
											<key>common.root</key>
											<value>uasdm-common</value>
										</systemProperty>
										<systemProperty>
											<key>jsp.dir</key>
											<value>uasdm-web/src/main/webapp/WEB-INF</value>
										</systemProperty>
										<systemProperty>
											<key>server.classpath.append</key>
											<value>../geoprism/geoprism-common/target/classes;../geoprism/geoprism-server/target/classes</value>
										</systemProperty>
										<systemProperty>
											<key>client.classpath.append</key>
											<value>../geoprism/geoprism-common/target/classes;../geoprism/geoprism-client/target/classes</value>
										</systemProperty>
									</systemProperties>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>package-deployable</id>
			<activation>
				<property>
					<name>package-deployable</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.4.0</version>
						<executions>
							<execution>
								<id>package-deployable-filemerge</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>net.geoprism.configuration.MergeUtility</mainClass>
									<arguments>
										<argument>--base=${project.build.directory}/classes</argument>
										<argument>--override=${project.basedir}/src/deployed/resources</argument>
										<argument>--export=${project.build.directory}/classes</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>patch</id>
			<activation>
				<property>
					<name>patch</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>patch</id>
								<phase>verify</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<executable>java</executable>
									<mainClass>net.geoprism.GeoprismPatcher</mainClass>
									<arguments>
										<argument>--metadataDir=${project.basedir}/target/classes/metadata</argument>
										<argument>--rootUser=${root.user}</argument>
										<argument>--rootPass=${root.pass}</argument>
										<argument>--templateDb=${root.db}</argument>
										<argument>--modules=uasdm</argument>
									</arguments>
									<systemProperties>
										<systemProperty>
											<key>endpoint.cache</key>
											<value>${project.basedir}/cache</value>
										</systemProperty>
									</systemProperties>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<!-- This tells maven to resolve variables in our properties files. -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.xlsx</exclude>
					<exclude>**/*.zip</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.xlsx</include>
					<include>**/*.zip</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/domain</directory>
				<filtering>false</filtering>
				<targetPath>${project.basedir}/target/classes/metadata/uasdm</targetPath>
				<excludes>
					<exclude>**/temp/**</exclude>
					<exclude>**/*.gitignore</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<executions>
					<execution>
						<id>geoprism.project.filemerge-server</id>
						<phase>process-resources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>net.geoprism.configuration.MergeUtility</mainClass>
							<arguments>
								<argument>--base=${geoprism.basedir}/geoprism-server/target/classes</argument>
								<argument>--override=${project.build.directory}/classes</argument>
								<argument>--export=${project.build.directory}/classes</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>geoprism.project.filemerge-common</id>
						<phase>process-resources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>net.geoprism.configuration.MergeUtility</mainClass>
							<arguments>
								<argument>--base=${geoprism.basedir}/geoprism-common/target/classes</argument>
								<argument>--override=${project.build.directory}/classes</argument>
								<argument>--export=${project.build.directory}/classes</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>geoprism.project.filemerge-client</id>
						<phase>process-resources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>net.geoprism.configuration.MergeUtility</mainClass>
							<arguments>
								<argument>--base=${geoprism.basedir}/geoprism-client/target/classes</argument>
								<argument>--override=${project.build.directory}/classes</argument>
								<argument>--export=${project.build.directory}/classes</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Weave Aspects -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>${aspectj.plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>com.runwaysdk</groupId>
							<artifactId>runwaysdk-server</artifactId>
						</aspectLibrary>
					</aspectLibraries>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<complianceLevel>${maven.compiler.target}</complianceLevel>
					<fork>true</fork>
					<meminitial>512m</meminitial>
					<maxmem>1024m</maxmem>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>add-resource</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/main/java</directory>
									<targetPath>source/server/stub</targetPath>
									<includes>
										<include>**/*.java</include>
									</includes>
								</resource>
								<resource>
									<directory>src/main/java-gen/stub</directory>
									<targetPath>source/server/stub</targetPath>
									<includes>
										<include>**/*.java</include>
									</includes>
								</resource>
								<resource>
									<directory>src/main/java-gen/base</directory>
									<targetPath>source/server/base</targetPath>
									<includes>
										<include>**/*.java</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
